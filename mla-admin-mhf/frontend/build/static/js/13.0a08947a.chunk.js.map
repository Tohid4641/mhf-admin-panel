{"version":3,"sources":["components/containers/eventDetails/eventDetails.jsx"],"names":["EventDetails","props","getEventDetails","event_id","thisView","axios","all","adminService","then","res","resData","data","status","eventDetails","eventProjectFileNames","JSON","parse","images","filesProjectFileNames","videos","filesProjectVideoFileNames","setState","Success_msg","apiError","catch","console","log","message","updateEvent","e","cell","preventDefault","match","id","params","url","replace","history","push","state","description","modal","event_title","options","addevent","bind","onChange","formSubmit","this","target","name","value","event","config","className","title","onClick","aria-hidden","subject","eventProjectName","content","eventProjectDescription","closeModal","moment","eventProjectDate","format","eventProjectPlace","length","map","eachImage","index","key","src","substring","fileBasicPath","alt","eachImageVideo","splitData","split","width","height","controls","keyBoardControl","React","Component","connect","auth","dispatch"],"mappings":"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","file":"static/js/13.0a08947a.chunk.js","sourcesContent":["import React from 'react'\n// import { Link, NavLink } from 'react-router-dom';\nimport { Button } from 'reactstrap'\nimport { Carousel } from 'react-responsive-carousel'\n// import { UncontrolledCarousel } from 'reactstrap';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\n// import Form from 'react-validation/build/form';\n// import Input from 'react-validation/build/input'\nimport axios from 'axios'\nimport adminService from '../../services/adminService'\nimport './eventDetails.scss'\n// import \"node_modules/video-react/dist/video-react.css\";\n// import { Player } from 'video-react';\nimport ReactPlayer from 'react-player'\n\nimport PrepareMail from '../prepareMail'\n\nclass EventDetails extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      eventDetails: [],\n      description: '',\n      modal: false,\n      event_title: '',\n      options: []\n    }\n\n    this.addevent = this.addevent.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.formSubmit = this.formSubmit.bind(this)\n    // this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  onChange (e) {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  componentDidMount () {\n    this.getEventDetails(this.props.match.params.event_id)\n  }\n\n  getEventDetails = event_id => {\n    var thisView = this\n    axios\n      .all([adminService.getEventDetails(event_id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            let eventDetails = resData.data\n            if (eventDetails.eventProjectFileNames) {\n              eventDetails.eventProjectFileNames = JSON.parse(\n                eventDetails.eventProjectFileNames\n              )\n              if (\n                eventDetails.eventProjectFileNames &&\n                eventDetails.eventProjectFileNames.images\n              ) {\n                eventDetails.filesProjectFileNames =\n                  eventDetails.eventProjectFileNames.images\n              }\n              if (\n                eventDetails.eventProjectFileNames &&\n                eventDetails.eventProjectFileNames.videos\n              ) {\n                eventDetails.filesProjectVideoFileNames =\n                  eventDetails.eventProjectFileNames.videos\n              }\n            }\n\n            thisView.setState({ eventDetails })\n            thisView.setState({ Success_msg: '' })\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  addevent () {\n    this.setState({\n      modal: !this.state.modal\n    })\n  }\n\n  // onChange = (e) => {\n  //     this.setState({ [e.target.name]: e.target.value });\n\n  // }\n  formSubmit (event) {\n    event.preventDefault()\n    console.log(this.state.description)\n  }\n\n  updateEvent = (e, cell) => {\n    e.preventDefault()\n\n    const { match } = this.props\n    let id = match.params.event_id\n    let url = match.url\n    url = url.replace(id, 'update/' + id)\n    this.props.history.push(url)\n  }\n\n  render () {\n    // const { match } = this.props;\n    const { eventDetails, modal } = this.state\n    const { config } = this.props\n    return (\n      <div className='col-span-12 mla-eventdetails'>\n        <div className='intro-y news p-5 box mt-8'>\n          <div className='intro-y flex text-xs sm:text-sm flex-col sm:flex-row items-center border-t border-gray-200'>\n            <div className='flex items-center'>\n              {/* <div className=\"w-12 h-12 flex-none image-fit\">\n                                <img alt=\" \" className=\"rounded-full\" src=\"images/profile-10.jpg\" />\n                            </div>\n                            <div className=\"ml-3 mr-auto text-gray-600\">\n                                <a href=\"\" className=\"font-medium text-black\">Admin</a>, Author\n                            </div> */}\n            </div>\n            <div className='edit-event-icon flex items-center text-gray-700 sm:ml-auto mt-5 sm:mt-0'>\n              <div className='intro-y flex relative pt-16 sm:pt-6 items-center pb-6'>\n                <div className='absolute sm:relative -mt-12 sm:mt-0 w-full flex text-gray-700 text-xs sm:text-sm'></div>\n                {/* <a href=\"\" className=\"intro-x w-8 h-8 sm:w-10 sm:h-10 flex flex-none items-center justify-center rounded-full bg-theme-14 text-theme-10 ml-auto sm:ml-0 tooltip\" title=\"Share\"> <i className=\"fa fa-share-alt\" aria-hidden=\"true\"></i></a> */}\n                <div className='event-btn'>\n                  {/* <Button className=\"intro-x w-8 h-8 sm:w-10 sm:h-10 flex flex-none items-center justify-center rounded-full bg-theme-14 text-theme-10 ml-auto sm:ml-0 tooltip\" title=\"Share\" onClick={this.addevent}>\n                                        <i className=\"fa fa-share-alt\" aria-hidden=\"true\"></i></Button> */}\n                  <Button\n                    className='intro-x w-8 h-8 sm:w-10 sm:h-10 flex flex-none items-center justify-center rounded-full bg-theme-14 text-theme-10 ml-auto sm:ml-0 tooltip'\n                    title='Share'\n                    onClick={this.updateEvent}\n                  >\n                    <i className='fa fa-edit mlac-edit' aria-hidden='true'></i>\n                  </Button>\n                  {modal && (\n                    <PrepareMail\n                      title='Share Event'\n                      subject={eventDetails.eventProjectName}\n                      content={eventDetails.eventProjectDescription}\n                      closeModal={this.addevent}\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <h2 className='intro-y font-medium text-xl sm:text-2xl mt-5'>\n            {eventDetails.eventProjectName}\n          </h2>\n          <div className='intro-y text-gray-700 text-xs sm:text-sm'>\n            {moment(this.state.eventDetails.eventProjectDate).format(\n              'Do MMM YYYY hh:mm A'\n            )}\n            <span className='mx-1'>â€¢</span>\n            {eventDetails.eventProjectPlace}\n          </div>\n          <div className='intro-y text-justify leading-relaxed mt-3'>\n            <p className='mb-5'>{eventDetails.eventProjectDescription}</p>\n          </div>\n          <br></br>\n\n          {eventDetails.filesProjectFileNames &&\n            eventDetails.filesProjectFileNames.length > 0 && (\n              <Carousel>\n                {eventDetails.filesProjectFileNames.map((eachImage, index) => {\n                  return (\n                    <div key={index}>\n                      <img\n                        className='ep-eachimage'\n                        // src={ config.fileBasicPath + eachImage}\n                        src={\n                          eachImage.substring(0, 4) === 'http'\n                            ? eachImage\n                            : config.fileBasicPath + eachImage\n                        }\n                        alt='description'\n                      />\n                    </div>\n                  )\n                })}\n              </Carousel>\n            )}\n\n          <br></br>\n          {/* tesing  */}\n          {eventDetails.filesProjectVideoFileNames &&\n            eventDetails.filesProjectVideoFileNames.length > 0 && (\n              <Carousel>\n                {eventDetails.filesProjectVideoFileNames.map(\n                  (eachImageVideo, index) => {\n                    let splitData = eachImageVideo.split('||||')\n\n                    return (\n                      <div key={index} className='player-wrapper'>\n                        <ReactPlayer\n                          className='react-player'\n                          url={\n                            eachImageVideo.substring(0, 4) === 'http'\n                              ? splitData[0]\n                              : config.fileBasicPath + splitData[0]\n                          }\n                          width='100%'\n                          height='100%'\n                          controls={true}\n                          keyBoardControl={true}\n                        />\n                      </div>\n                    )\n                  }\n                )}\n              </Carousel>\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  config: state.auth.config\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventDetails)\n"],"sourceRoot":""}