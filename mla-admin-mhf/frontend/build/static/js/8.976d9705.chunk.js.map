{"version":3,"sources":["components/containers/complaintEvents/complaintEvent.js"],"names":["ComplaintEvent","props","getComplaintDetails","complaint_id","thisView","setState","fetchingDetails","axios","all","adminService","then","res","resData","data","status","complaitDetails","complaintDetailsLogs","logs","complaintStatus","label","value","complaintHasDetails","Success_msg","apiError","catch","console","log","message","handleChange","selectedOption","updateComplaintStatus","updatingStatus","match","params","complaintUpdated","updateComplaintPublish","publishStatus","updateComplaintPublished","bind","state","complaintStatusOptions","content","this","config","className","complaintNumber","sm","md","lg","moment","createdAt","format","user","fullName","mobileNo","Date","diff","xs","complaintTitle","complaintLocation","name","onChange","options","isSearchable","style","border","isLoading","isDisabled","complaintPublish","float","color","onClick","complaintDescription","complaintFileNames","src","fileBasicPath","alt","userPhoto","reverse","map","result","title","complaintId","icon","React","Component","connect","auth","dispatch"],"mappings":"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","file":"static/js/8.976d9705.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Card } from 'reactstrap'\nimport { Carousel } from 'react-responsive-carousel'\n// import { UncontrolledCarousel } from 'reactstrap';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'\nimport moment from 'moment'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\nimport Select from 'react-select'\nimport './complaintEvent.scss'\nimport adminService from '../../services/adminService'\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\nimport MaterialIcon from 'material-icons-react'\nimport Translate from 'react-translate-component'\n\nclass ComplaintEvent extends React.Component {\n  constructor (props) {\n    super(props)\n    this.updateComplaintPublish = this.updateComplaintPublish.bind(this)\n\n    this.state = {\n      complaitDetails: {},\n      complaintDetailsLogs: [],\n      complaintStatus: '',\n      complaintStatusOptions: [\n        { label: <Translate content='pending' />, value: 'Pending' },\n        { label: <Translate content='in progress' />, value: 'In Progress' },\n        { label: <Translate content='closed' />, value: 'Closed' }\n      ],\n      fetchingDetails: false,\n      complaintHasDetails: false,\n      updatingStatus: false,\n      publishStatus: false\n    }\n  }\n\n  componentDidMount () {\n    this.getComplaintDetails(this.props.match.params.complaint_id)\n  }\n\n  getComplaintDetails = complaint_id => {\n    var thisView = this\n    this.setState({ fetchingDetails: true })\n    axios\n      .all([adminService.getComplaintDetails(complaint_id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n\n          if (resData.status) {\n            let complaitDetails = resData.data\n            // console.log(complaitDetails.logs)\n            let complaintDetailsLogs = complaitDetails.logs\n            let complaintStatus = {\n              label: complaitDetails.complaintStatus,\n              value: complaitDetails.complaintStatus\n            }\n            thisView.setState({\n              complaitDetails,\n              complaintDetailsLogs,\n              complaintStatus,\n              complaintHasDetails: true\n            })\n            thisView.setState({ Success_msg: '' })\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n        thisView.setState({ fetchingDetails: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in complaint Details')\n      })\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ complaintStatus: selectedOption })\n    this.updateComplaintStatus(selectedOption.value)\n  }\n\n  updateComplaintStatus = status => {\n    var thisView = this\n    this.setState({ updatingStatus: true })\n    axios\n      .all([\n        adminService.updateComplaintStatus(\n          this.props.match.params.complaint_id,\n          status\n        )\n      ])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            let complaintUpdated = resData.data\n            console.log(complaintUpdated)\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n        thisView.setState({ updatingStatus: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  updateComplaintPublish = status => {\n    var thisView = this\n    this.setState({ publishStatus: true })\n    axios\n      .all([\n        adminService.updateComplaintPublish(\n          this.props.match.params.complaint_id,\n          status\n        )\n      ])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            let updateComplaintPublished = resData.data\n            console.log(updateComplaintPublished)\n            thisView.getComplaintDetails(\n              thisView.props.match.params.complaint_id\n            )\n            // thisView.props.history.push(\"/complaints\");\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n        thisView.setState({ publishStatus: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  render () {\n    // const { match } = this.props;\n    const {\n      complaitDetails,\n      complaintDetailsLogs,\n      fetchingDetails,\n      complaintStatus,\n      complaintStatusOptions,\n      complaintHasDetails,\n      updatingStatus,\n      publishStatus\n    } = this.state\n    const { config } = this.props\n\n    return (\n      <div className='col-span-12 mla-complaints-details'>\n        {complaitDetails && complaitDetails.complaintNumber && (\n          <Card className='intro-y alignment complaint-status-card'>\n            <Row className='container mt-3'>\n              <Col sm={12} md={6} lg={6}>\n                <span className='br'></span>\n                <p className='font-weight-bold'>\n                  {complaitDetails.complaintNumber}\n                </p>\n                <p className='secondary mt-1'>\n                  <Translate content='Complaint Number' />\n                </p>\n              </Col>\n\n              <Col sm={12} md={6} lg={6}>\n                {/* <span className=\"br\"></span> */}\n                <p className='font-weight-bold'>\n                  {moment(complaitDetails.createdAt).format(\n                    'Do MMM YYYY hh:mm A'\n                  )}\n                </p>\n                <p className='secondary mt-1'>\n                  {' '}\n                  <Translate content='created date' />\n                </p>\n              </Col>\n\n              <Col sm={12} md={6} lg={6}>\n                <span className='br'></span>\n                <p className='font-weight-bold'>\n                  {complaitDetails &&\n                    complaitDetails.user &&\n                    complaitDetails.user.fullName &&\n                    complaitDetails.user.fullName}\n                  {complaitDetails &&\n                    complaitDetails.user &&\n                    complaitDetails.user.mobileNo && (\n                      <span> - {complaitDetails.user.mobileNo} </span>\n                    )}\n                </p>\n                <p className='secondary mt-1'>\n                  <Translate content='ticket raised by' />\n                </p>\n              </Col>\n\n              <Col sm={12} md={6} lg={6}>\n                {/* <span className=\"br\"></span> */}\n                <p className='text-warning font-weight-bold'>\n                  {complaitDetails.complaintStatus}\n                  {complaitDetails.complaintStatus !== 'Closed' && (\n                    <Fragment>\n                      {' - '}{' '}\n                      {moment(new Date()).diff(\n                        moment(complaitDetails.createdAt),\n                        'days'\n                      )}{' '}\n                      {' Days'}\n                    </Fragment>\n                  )}\n                </p>\n                <p className='secondary mt-1'>\n                  <Translate content='status' />\n                </p>\n              </Col>\n            </Row>\n          </Card>\n        )}\n\n        {!fetchingDetails ? (\n          complaintHasDetails ? (\n            <div className='intro-y news p-5 box mt-2'>\n              <Row>\n                <Col xs={12} sm={12} md={6} lg={8}>\n                  <h2 className='intro-y font-medium text-xl sm:text-2xl'>\n                    {complaitDetails.complaintTitle}\n                  </h2>\n                  <div className='intro-y text-gray-700 text-xs sm:text-sm'>\n                    {moment(complaitDetails.createdAt).format(\n                      'Do MMM YYYY hh:mm A'\n                    )}\n                    <span className='mx-1'>•</span>\n                    {complaitDetails.complaintLocation}\n                  </div>\n                </Col>\n                <Col\n                  xs={12}\n                  sm={12}\n                  md={6}\n                  lg={4}\n                  className='mlac-change-statue'\n                >\n                  <Select\n                    name='mlac-status-change'\n                    className='selectbox w-full  mt-2 flex-1'\n                    onChange={this.handleChange}\n                    options={complaintStatusOptions}\n                    value={complaintStatus}\n                    isSearchable\n                    style={{ border: 'none !important' }}\n                    isLoading={updatingStatus + publishStatus}\n                    isDisabled={updatingStatus + publishStatus}\n                  />\n                  {complaitDetails.complaintPublish &&\n                  complaitDetails.complaintPublish === 'Publish' ? (\n                    <Button\n                      style={{ float: 'right' }}\n                      className=' btn btn-primary mt-3'\n                      color='primary'\n                      onClick={() => {\n                        this.updateComplaintPublish('')\n                      }}\n                    >\n                      <Translate content='unpublish' />\n                    </Button>\n                  ) : (\n                    <Button\n                      style={{ float: 'right' }}\n                      className=' btn btn-primary mt-3'\n                      color='primary'\n                      onClick={() => {\n                        this.updateComplaintPublish('Publish')\n                      }}\n                    >\n                      <Translate content='publish' />\n                    </Button>\n                  )}\n                </Col>\n              </Row>\n\n              <div className='intro-y text-justify leading-relaxed mt-5'>\n                <p className='mb-5'>{complaitDetails.complaintDescription}</p>\n              </div>\n              <br></br>\n              {/* <UncontrolledCarousel className=\"adjust\" items={items} /> */}\n              {complaitDetails.complaintFileNames &&\n                complaitDetails.complaintFileNames !== '' && (\n                  <Carousel>\n                    <div>\n                      <img\n                        src={\n                          config.fileBasicPath +\n                          complaitDetails.complaintFileNames\n                        }\n                        alt='description'\n                      />\n                    </div>\n                  </Carousel>\n                )}\n\n              <div className='intro-y flex text-xs sm:text-sm flex-col sm:flex-column items-center border-t border-gray-200'>\n                <span className='malac-by'>\n                  <Translate content='complaint by' />:{' '}\n                </span>\n                <div className='flex items-center'>\n                  <div className='w-12 h-12 flex-none image-fit'>\n                    {complaitDetails &&\n                    complaitDetails.user &&\n                    complaitDetails.user.userPhoto &&\n                    complaitDetails.user.userPhoto !== '' ? (\n                      <img\n                        alt=' '\n                        className='rounded-full'\n                        src={\n                          config.fileBasicPath + complaitDetails.user.userPhoto\n                        }\n                      />\n                    ) : (\n                      <img\n                        alt=' '\n                        className='rounded-full'\n                        src='images/profile-10.jpg'\n                      />\n                    )}\n                  </div>\n                  <div className='ml-3 mr-auto text-gray-600'>\n                    <Link className='font-medium text-black'>\n                      {complaitDetails &&\n                        complaitDetails.user &&\n                        complaitDetails.user.fullName &&\n                        complaitDetails.user.fullName}\n                    </Link>\n                    <span className='mx-1'>•</span>\n                    <Link className='font-medium text-black'>\n                      {complaitDetails &&\n                        complaitDetails.user &&\n                        complaitDetails.user.mobileNo &&\n                        complaitDetails.user.mobileNo}\n                    </Link>\n                  </div>\n                </div>\n                <div className='flex items-center text-gray-700 sm:ml-auto mt-5 sm:mt-0'>\n                  <div className='intro-y flex relative pt-16 sm:pt-6 items-center pb-6'>\n                    {/* <div className=\"absolute sm:relative -mt-12 sm:mt-0 w-full flex text-gray-700 text-xs sm:text-sm\">\n                                    </div>\n                                    <a href=\"\" className=\"intro-x w-8 h-8 sm:w-10 sm:h-10 flex flex-none items-center justify-center rounded-full bg-theme-14 text-theme-10 ml-auto sm:ml-0 tooltip\" title=\"Share\"> <i className=\"fa fa-share-alt\" aria-hidden=\"true\"></i></a> */}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>No Record Found</div>\n          )\n        ) : (\n          <i className='fa fa-spin fa-refresh initial_loading' />\n        )}\n        <br></br>\n        <hr></hr>\n\n        <div className='complaint_status_track mt-3'>\n          {complaintDetailsLogs.reverse().map(result => (\n            <Timeline>\n              <TimelineEvent\n                title={result.complaintId}\n                createdAt={moment(result.createdAt).format(\n                  'Do MMM YYYY hh:mm A'\n                )}\n                icon={<MaterialIcon icon='person' />}\n              >\n                {result.complaintStatus}\n              </TimelineEvent>\n            </Timeline>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  config: state.auth.config\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplaintEvent)\n"],"sourceRoot":""}