{"version":3,"sources":["../node_modules/reactstrap/es/Container.js","components/containers/login/login.js"],"names":["_excluded","propTypes","tag","tagPropType","fluid","PropTypes","oneOfType","bool","string","className","cssModule","object","Container","props","Tag","attributes","_objectWithoutPropertiesLoose","containerClass","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","Login","updateValidators","fieldName","value","validators","errors","state","valid","rules","forEach","rule","test","RegExp","push","message","isFormValid","status","Object","keys","field","isFormValid_varification","displayValidationErrors","validator","map","info","index","key","onChange","e","setState","target","name","Admin_send_otp","location","mobile_no","thisView","authenticating_resend","axios","all","adminService","then","res","resData","data","sendotp","otp_verification","Errormsg","authenticating","catch","console","log","AdminOtp_verification","event","preventDefault","otp","authData","Storage","JSON","stringify","updatingAuthenticate","token","mobileNo","profile","history","handleSubmit","bind","email","password","mobileData","validateSession","parse","this","style","flex","Col","md","padding","Card","borderRadius","boxShadow","CardBody","textAlign","fontSize","onSubmit","FormGroup","type","placeholder","Button","color","disabled","marginBottom","paddingTop","Alert","cursor","onClick","Component","connect","config","auth","dispatch","authenticate"],"mappings":"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","file":"static/js/17.9ef6408d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"fluid\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  fluid: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Container = function Container(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      fluid = props.fluid,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var containerClass = 'container';\n\n  if (fluid === true) {\n    containerClass = 'container-fluid';\n  } else if (fluid) {\n    containerClass = \"container-\" + fluid;\n  }\n\n  var classes = mapToCssModules(classNames(className, containerClass), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nContainer.propTypes = propTypes;\nContainer.defaultProps = defaultProps;\nexport default Container;","import React from 'react'\nimport './login.scss'\nimport {\n  Col,\n  Card,\n  Alert,\n  FormGroup,\n  Button,\n  Container,\n  CardBody\n} from 'reactstrap'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport validators from '../../validators/validators'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\n\nimport adminService from '../../services/adminService'\nimport * as Storage from '../../services/localstorage'\n\nimport { authenticate } from '../../../store/actions/auth'\n\nclass Login extends React.Component {\n  constructor (props) {\n    super(props)\n    // this.onChange = this.onChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n    // this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      otp: '',\n      Errormsg: '',\n      mobile_no: '',\n      mobileData: '',\n      sendotp: true,\n      otp_verification: false,\n      authenticating: false,\n      authenticating_resend: false,\n      validateSession: false\n    }\n    this.validators = validators\n  }\n\n  componentDidMount () {\n    // thisView = this;\n    let key = Storage.authKey\n    let authData = Storage.get(key)\n    if (authData && authData !== '') {\n      authData = JSON.parse(authData)\n      this.props.updatingAuthenticate({\n        token: authData.token,\n        mobileNo: authData.mobileNo,\n        profile: authData\n      })\n      this.props.history.push('home')\n    } else {\n      this.setState({ validateSession: true })\n    }\n  }\n\n  updateValidators = (fieldName, value) => {\n    this.validators[fieldName].errors = []\n    this.validators[fieldName].state = value\n    this.validators[fieldName].valid = true\n    this.validators[fieldName].rules.forEach(rule => {\n      if (rule.test instanceof RegExp) {\n        if (!rule.test.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      } else if (typeof rule.test === 'function') {\n        if (!rule.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      }\n    })\n  }\n\n  isFormValid = () => {\n    let status = true\n    Object.keys(this.validators).forEach(field => {\n      if (field === 'mobile_no') {\n        if (!this.validators[field].valid) {\n          status = false\n        }\n      }\n    })\n    return status\n  }\n\n  isFormValid_varification = () => {\n    let status = true\n    Object.keys(this.validators).forEach(field => {\n      if (field === 'otp') {\n        if (!this.validators[field].valid) {\n          status = false\n        }\n      }\n    })\n    return status\n  }\n\n  displayValidationErrors = fieldName => {\n    const validator = this.validators[fieldName]\n    const result = ''\n    if (validator && !validator.valid) {\n      const errors = validator.errors.map((info, index) => {\n        return (\n          <span className='error' key={index}>\n            * {info}\n            <br />\n          </span>\n        )\n      })\n      return <div className='col s12 row'>{errors}</div>\n    }\n    return result\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.updateValidators([e.target.name], e.target.value)\n  }\n\n  handleSubmit (event) {\n    // console.log(this.state);\n    event.preventDefault()\n    this.setState({ authenticating: true })\n\n    // if (this.state.mobile_no === '12345678') {\n\n    //     this.props.history.push(\"/home\");\n    // }\n\n    // else {\n\n    //     // alert(\"Please Enter Correct Email or Password\");\n    //     Errormsg1.setState({ Errormsg: \"Please Enter Correct Email or Password\" })\n    // }\n    // thisView.setState({ authenticating: false });\n\n    this.Admin_send_otp()\n  }\n\n  Admin_send_otp = location => {\n    const { mobile_no } = this.state\n    var thisView = this\n\n    if (location && location === 'resend') {\n      this.setState({ authenticating_resend: true })\n    }\n\n    axios\n      .all([adminService.Admin_send_otp(mobile_no)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            // let mobileNUmber = resData.data.mobileNo\n            // Storage.set(\"otpDetail\", JSON.stringify({ otpresponse: resData.data }));\n\n            thisView.setState({ sendotp: false, otp_verification: true })\n\n            // thisView.setState({ mobileData: mobileNUmber })\n          } else {\n            thisView.setState({ Errormsg: resData.message })\n          }\n        }\n        thisView.setState({ authenticating: false })\n        if (location && location === 'resend') {\n          thisView.setState({ authenticating_resend: false })\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in Admin_send_otp')\n      })\n  }\n\n  AdminOtp_verification = event => {\n    event.preventDefault()\n    this.setState({ authenticating: true })\n    // let otpresponse = window.localStorage.getItem(\"otpDetail\");\n    // let otpDetail = JSON.parse(otpresponse);\n    // let mobileNo = otpDetail.otpresponse.mobileNo;\n    // console.log(mobileNo);\n\n    const { mobile_no, otp } = this.state\n    var thisView = this\n    axios\n      .all([adminService.AdminOtp_verification(mobile_no, otp)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            let authData = resData.data\n            let key = Storage.authKey\n            Storage.set(key, JSON.stringify(authData))\n\n            thisView.props.updatingAuthenticate({\n              token: authData.token,\n              mobileNo: authData.mobileNo,\n              profile: authData\n            })\n\n            thisView.props.history.push('home')\n          } else {\n            // thisView.setState({ Errormsg: resData.message });\n            thisView.setState({ Errormsg: 'Enter Correct OTP' })\n          }\n        }\n        thisView.setState({ authenticating: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message)\n          console.log('An error occurred in AdminOtp_verification')\n      })\n  }\n\n  render () {\n    const {\n      Errormsg,\n      authenticating,\n      authenticating_resend,\n      sendotp,\n      otp_verification,\n      validateSession\n    } = this.state\n\n    return (\n      <div className='col-span-12 mla-login' style={{ flex: '1 1' }}>\n        <div className='col-span-12 xxl:col-span-9'>\n          <Container>\n            <Col md={4} className='mx-auto' style={{ padding: '65px 0' }}>\n              <Card\n                className=' card-statistics mb-30'\n                style={{\n                  borderRadius: '0rem !important',\n                  boxShadow: '0px 8px 36px #222'\n                }}\n              >\n                <CardBody>\n                  <div\n                    className='mx-auto mla-logo-cont'\n                    style={{ textAlign: 'center' }}\n                  >\n                    {/* <img src={mlaLogo} className=\"mla-logo\" alt=\"img\" /> */}\n                    <span className='mhf-text'>MHF</span>\n                  </div>\n\n                  {/* <div className=\"mx-auto\" style={{ textAlign: \"center\" }}> */}\n                  {sendotp && validateSession && (\n                    <div className='sendotp'>\n                      <div>\n                        <h2\n                          className='font-weight-bold'\n                          style={{ fontSize: '22px' }}\n                        >\n                          {' '}\n                          Sign In\n                        </h2>\n                      </div>\n                      <br></br>\n                      {/* {this.state.mobileData && <p>{this.state.mobileData}</p>} */}\n\n                      <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                          <Input\n                            type='text'\n                            name='mobile_no'\n                            // validations={[required, email]}\n                            className='form-control'\n                            onChange={this.onChange}\n                            value={this.state.mobile_no}\n                            placeholder='Enter Mobile Number'\n                          />\n                          {this.displayValidationErrors('mobile_no')}\n                        </FormGroup>\n                        <h2\n                          className='font-weight-bold'\n                          style={{ fontSize: '12px', textAlign: 'center' }}\n                        >\n                          {' '}\n                          We Will Send One Time Password ( OTP ) to your mobile\n                          number\n                        </h2>\n\n                        {!authenticating ? (\n                          <Button\n                            className=' btn btn-primary mt-3'\n                            style={{\n                              padding: '0.375rem 1.75rem',\n                              borderRadius: '1.25rem'\n                            }}\n                            color='primary'\n                            type='submit'\n                            disabled={this.isFormValid() ? false : true}\n                          >\n                            <span className='text-white'>Send OTP</span>\n                          </Button>\n                        ) : (\n                          <i className='fa fa-spin fa-refresh authentication-loading' />\n                        )}\n                      </Form>\n                    </div>\n                  )}\n\n                  {otp_verification && (\n                    <div className='otp-verification'>\n                      <div>\n                        <h2\n                          className='font-weight-bold'\n                          style={{ marginBottom: '5px', fontSize: '22px' }}\n                        >\n                          {' '}\n                          OTP Verification\n                        </h2>\n                      </div>\n                      <h2\n                        className='font-weight-bold'\n                        style={{ fontSize: '12px' }}\n                      >\n                        Enter the OTP you Received to\n                      </h2>\n                      {this.state.mobileData && (\n                        <h2\n                          className='font-weight-bold'\n                          style={{ fontSize: '12px', paddingTop: '4px' }}\n                        >\n                          +91-{this.state.mobileData}\n                        </h2>\n                      )}\n                      <br></br>\n\n                      {Errormsg && (\n                        <div className='errormsg'>\n                          <Alert color='danger'>{Errormsg}</Alert>\n                        </div>\n                      )}\n\n                      <Form onSubmit={this.AdminOtp_verification}>\n                        <FormGroup>\n                          {/* <Label>OTP</Label> */}\n                          <Input\n                            type='password'\n                            className='form-control'\n                            name='otp'\n                            onChange={this.onChange}\n                            value={this.state.otp}\n                            placeholder='Enter OTP'\n                          />\n                          {this.displayValidationErrors('otp')}\n                        </FormGroup>\n\n                        <h2\n                          className='font-weight-bold'\n                          style={{ fontSize: '12px', textAlign: 'center' }}\n                        >\n                          If you didn't receive a code !&nbsp;\n                          {!authenticating_resend ? (\n                            <span\n                              style={{ cursor: 'pointer', color: '#007bff' }}\n                              onClick={() => {\n                                this.Admin_send_otp('resend')\n                              }}\n                            >\n                              Resend\n                            </span>\n                          ) : (\n                            <i className='fa fa-spin fa-refresh authentication-loading' />\n                          )}\n                        </h2>\n                        {!authenticating ? (\n                          <Button\n                            className=' btn btn-primary mt-3'\n                            style={{\n                              padding: '0.375rem 1.75rem',\n                              borderRadius: '1.25rem'\n                            }}\n                            color='primary'\n                            type='submit'\n                            disabled={\n                              this.isFormValid_varification() ? false : true\n                            }\n                          >\n                            <span className='text-white'>Sign In</span>\n                          </Button>\n                        ) : (\n                          <i className='fa fa-spin fa-refresh authentication-loading' />\n                        )}\n                      </Form>\n                    </div>\n                  )}\n                </CardBody>\n              </Card>\n            </Col>\n          </Container>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  config: state.auth.config\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updatingAuthenticate (data) {\n    dispatch(authenticate(data))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"sourceRoot":""}