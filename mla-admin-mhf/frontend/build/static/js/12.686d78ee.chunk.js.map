{"version":3,"sources":["components/containers/departmentsForm/departmentsForm.js"],"names":["departmentsForm","props","updateValidators","fieldName","value","validators","errors","state","valid","rules","forEach","rule","test","RegExp","push","message","isFormValid","status","Object","keys","field","displayValidationErrors","validator","map","info","index","className","key","onChange","e","setState","target","name","insertDepartment","authenticating","departmentName","thisView","axios","all","adminService","then","res","resData","data","history","apiError","msg","catch","console","log","getDepartment","match","params","department_id","departmentDetails","validate","Success_msg","updateDepartment","id","tabround","bind","handleSubmit","departmentname","tab","this","location","pathname","indexOf","event","preventDefault","content","md","onSubmit","placeholder","type","color","disabled","React","Component"],"mappings":"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","file":"static/js/12.686d78ee.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, CardBody, Row, Col, FormGroup, Button, Label } from 'reactstrap'\nimport axios from 'axios'\nimport Input from 'react-validation/build/input'\nimport Form from 'react-validation/build/form'\nimport adminService from '../../services/adminService'\nimport validators from '../../validators/validators'\n\nimport Translate from 'react-translate-component'\n\nimport './departmentsForm.scss'\n\nclass departmentsForm extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.tabround = this.tabround.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n    this.state = {\n      departmentName: '',\n      data: '',\n      apiError: '',\n      authenticating: false,\n      updateDepartment: false,\n      departmentDetails: {},\n      departmentname: ''\n    }\n    this.validators = validators\n  }\n\n  tabround (tab) {\n    if (this.state.tabround !== tab) {\n      this.setState({\n        tabround: tab\n      })\n    }\n  }\n\n  componentDidMount () {\n    if (this.props.location.pathname.indexOf('update') > -1) {\n      this.setState({ updateDepartment: true })\n      this.getDepartment(this.props.match.params.department_id)\n      // console.log(this.props.match.params.department_id);\n    }\n  }\n\n  /*******************************Function New Validation Start************************************************ */\n\n  updateValidators = (fieldName, value) => {\n    this.validators[fieldName].errors = []\n    this.validators[fieldName].state = value\n    this.validators[fieldName].valid = true\n    this.validators[fieldName].rules.forEach(rule => {\n      if (rule.test instanceof RegExp) {\n        if (!rule.test.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      } else if (typeof rule.test === 'function') {\n        if (!rule.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      }\n    })\n  }\n\n  isFormValid = () => {\n    let status = true\n    Object.keys(this.validators).forEach(field => {\n      if (field === 'departmentName') {\n        if (!this.validators[field].valid) {\n          status = false\n        }\n      }\n    })\n    return status\n  }\n\n  displayValidationErrors = fieldName => {\n    const validator = this.validators[fieldName]\n    const result = ''\n    if (validator && !validator.valid) {\n      const errors = validator.errors.map((info, index) => {\n        return (\n          <span className='error' key={index}>\n            * {info}\n            <br />\n          </span>\n        )\n      })\n      return <div className='col s12 row'>{errors}</div>\n    }\n    return result\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n    this.updateValidators([e.target.name], e.target.value)\n  }\n\n  handleSubmit (event) {\n    event.preventDefault()\n\n    // this.setState({ authenticating: true });\n    // this.updateDepartment();\n    var thisView = this\n\n    if (thisView.state.updateDepartment) thisView.updateDepartment()\n    else thisView.insertDepartment()\n  }\n\n  insertDepartment = () => {\n    this.setState({ authenticating: true })\n\n    const { departmentName } = this.state\n    var thisView = this\n\n    axios\n      .all([adminService.insertDepartment(departmentName)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            thisView.props.history.push('/departments')\n          } else {\n            thisView.setState({ apiError: resData.msg })\n          }\n        }\n        thisView.setState({ authenticating: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  getDepartment = () => {\n    var thisView = this\n    axios\n      .all([adminService.getDepartment(this.props.match.params.department_id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          console.log(resData)\n          if (resData.status) {\n            let departmentDetails = resData.data\n\n            let departmentName = departmentDetails.departmentName\n\n            let validate = { departmentName }\n            Object.keys(validate).map(key => {\n              thisView.updateValidators([key], validate[key])\n              return true\n            })\n\n            thisView.setState({ departmentName })\n            console.log('updated')\n            thisView.setState({ departmentDetails })\n            thisView.setState({ Success_msg: '' })\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  updateDepartment = () => {\n    const { departmentName } = this.state\n    var thisView = this\n    let id = this.props.match.params.department_id\n    this.setState({ authenticating: true })\n    axios\n      .all([adminService.updateDepartment(departmentName, id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            // thisView.props.history.push(\"/mlaprofile\");\n            thisView.props.history.push('/departments')\n          } else {\n            thisView.setState({ apiError: resData.msg })\n          }\n        }\n        thisView.setState({ authenticating: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in Departments')\n      })\n  }\n\n  render () {\n    console.log(this.state.departmentDetails)\n    const { authenticating } = this.state\n\n    return (\n      <div className='col-span-12 mla-departments-form'>\n        <div className='grid grid-cols-12 gap-6 mt-8'>\n          <div className='intro-y col-span-12 lg:col-span-6'>\n            <div className='intro-y'>\n              <div className='flex flex-col sm:flex-row items-center p-4 border-b border-gray-200'>\n                <h1 className='font-medium text-base mr-auto'>\n                  <Translate content='departments form' />\n                </h1>\n              </div>\n              <Row>\n                <Col md={12}>\n                  <Card className=' card-statistics'>\n                    <CardBody>\n                      <Form onSubmit={this.handleSubmit}>\n                        <FormGroup className='section-field'>\n                          <Label>\n                            {' '}\n                            <Translate content='department name' />{' '}\n                          </Label>\n                          <Input\n                            placeholder='Department Name'\n                            type='text'\n                            name='departmentName'\n                            value={this.state.departmentDetails.departmentName}\n                            onChange={this.onChange}\n                            className='form-control'\n                          />\n                          {this.displayValidationErrors('departmentName')}\n                        </FormGroup>\n\n                        <FormGroup>\n                          {/* {\n                                                !authenticating ?\n                                                    <Button className=\" btn btn-primary mt-3\" color=\"primary\" type=\"submit\"><span className=\"text-white\">Submit</span>\n                                                    </Button>:\n                                                <i className=\"fa fa-spin fa-refresh authentication-loading\" />\n                                            } */}\n                          {!authenticating ? (\n                            <Button\n                              className=' btn btn-primary mt-3'\n                              color='primary'\n                              type='submit'\n                              disabled={this.isFormValid() ? false : true}\n                            >\n                              {this.state.updateDepartment ? (\n                                <span className='text-white'>\n                                  {' '}\n                                  <Translate content='update' />{' '}\n                                </span>\n                              ) : (\n                                <span className='text-white'>\n                                  {' '}\n                                  <Translate content='submit' />{' '}\n                                </span>\n                              )}\n                            </Button>\n                          ) : (\n                            <i className='fa fa-spin fa-refresh authentication-loading' />\n                          )}\n                        </FormGroup>\n                      </Form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default departmentsForm\n"],"sourceRoot":""}