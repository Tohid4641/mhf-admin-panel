{"version":3,"sources":["components/containers/complaints/complaints.js"],"names":["Complaints","props","updateValidators","fieldName","value","validators","errors","state","valid","rules","forEach","rule","test","RegExp","push","message","isFormValid","status","Object","keys","field","displayValidationErrors","validator","map","info","index","className","key","handleChange","selectedOption","setState","complaintFilterStatusSelected","filters","complaintFilters","updatingComplaintFilters","getFilterComplaints","handleChange1","selectedOptions","complaintFilterPublishSelected","publish","updateDateFilter","startDate","endDate","date","complaintNumber","authenticating","thisView","updatingStatus","axios","all","adminService","match","params","complaint_id","then","res","resData","data","history","_id","apiError","catch","console","log","getComplaints","fetchingDetails","complaintsList","eachComplaint","id","details","title","complaintTitle","description","complaintDescription","complaintStatus","moment","createdAt","format","complaintsMain","sDate","eData","fetchDetails","complaintsFilter","complaintPublish","formatComplaint","cell","row","to","path","sm","filterComplaints","event","searchText","target","length","filter","each_complaint","toLowerCase","indexOf","DateRangePicker","onChange","bind","handleSubmit","published","modal","apiSuccess","complaintFilterStatusOptions","label","content","complaintStatusOptions","toggle","this","e","name","preventDefault","md","style","float","onClick","isOpen","marginTop","marginLeft","backgroundColor","color","onSubmit","type","placeholder","disabled","options","isSearchable","border","isLoading","isDisabled","enableOutsideDays","isOutsideRange","isDayHighlighted","day","isSame","Date","focusedInput","onFocusChange","onDatesChange","lg","xs","field_search_input","onKeyDown","ref","input","searchInput","pagination","striped","condensed","dataField","dataFormat","isKey","React","Component","connect","auth","dispatch","updateComplaintFilters"],"mappings":"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","file":"static/js/9.26cca70a.chunk.js","sourcesContent":["import React from 'react'\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'\nimport { NavLink } from 'react-router-dom'\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Alert\n} from 'reactstrap'\nimport axios from 'axios'\nimport moment from 'moment'\nimport Select from 'react-select'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport { connect } from 'react-redux'\nimport './complaints.scss'\nimport validators from '../../validators/validators'\nimport adminService from '../../services/adminService'\nimport { updateComplaintFilters } from '../../../store/actions/auth'\n\n// import { addDays } from 'date-fns';\n// import { useState } from 'react';\nimport { DateRangePicker } from 'react-dates'\nimport 'react-dates/lib/css/_datepicker.css'\nimport 'react-dates/initialize'\nimport Translate from 'react-translate-component'\n\n// import 'react-date-range/dist/styles.css'; // main css file\n// import 'react-date-range/dist/theme/default.css';\n// const [state, setState] = useState([\n//     {\n//       startDate: new Date(),\n//       endDate: addDays(new Date(), 7),\n//       key: 'selection'\n//     }\n//   ]);\nclass Complaints extends React.Component {\n  constructor (props) {\n    super(props)\n    this.onChange = this.onChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.DateRangePicker = this.DateRangePicker.bind(this)\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      published: '',\n      apiError: '',\n      modal: false,\n      complaintNumber: '',\n      id: '',\n      apiSuccess: '',\n      authenticating: false,\n      complaintsList: [],\n      complaintsMain: [],\n      searchText: '',\n      fetchingDetails: false,\n      fetchDetails: false,\n      complaintFilterStatusOptions: [\n        { label: <Translate content='all' />, value: 'All' },\n        { label: <Translate content='pending' />, value: 'Pending' },\n        { label: <Translate content='in progress' />, value: 'In Progress' },\n        { label: <Translate content='closed' />, value: 'Closed' }\n      ],\n\n      complaintFilterStatusSelected: {\n        label: <Translate content='all' />,\n        value: 'All'\n      },\n\n      complaintStatusOptions: [\n        { label: <Translate content='all' />, value: 'All' },\n        { label: <Translate content='publish' />, value: 'Publish' },\n        { label: <Translate content='unpublish' />, value: 'UnPublish' }\n      ],\n\n      complaintFilterPublishSelected: {\n        label: <Translate content='all' />,\n        value: 'All'\n      }\n    }\n    this.validators = validators\n\n    this.toggle = this.toggle.bind(this)\n  }\n\n  toggle () {\n    this.setState({\n      modal: !this.state.modal,\n      authenticating: false,\n      apiError: ''\n    })\n  }\n\n  onChange (e) {\n    this.setState({ [e.target.name]: e.target.value })\n    this.updateValidators([e.target.name], e.target.value)\n  }\n\n  handleSubmit (event) {\n    event.preventDefault()\n    // this.form.validateAll();\n    this.setState({ authenticating: true })\n    this.complaintNumber()\n\n    // console.log(this.state)\n  }\n\n  updateValidators = (fieldName, value) => {\n    this.validators[fieldName].errors = []\n    this.validators[fieldName].state = value\n    this.validators[fieldName].valid = true\n    this.validators[fieldName].rules.forEach(rule => {\n      if (rule.test instanceof RegExp) {\n        if (!rule.test.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      } else if (typeof rule.test === 'function') {\n        if (!rule.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      }\n    })\n  }\n\n  isFormValid = () => {\n    let status = true\n    Object.keys(this.validators).forEach(field => {\n      if (field === 'complaintNumber') {\n        if (!this.validators[field].valid) {\n          status = false\n        }\n      }\n    })\n    return status\n  }\n\n  displayValidationErrors = fieldName => {\n    const validator = this.validators[fieldName]\n    const result = ''\n    if (validator && !validator.valid) {\n      const errors = validator.errors.map((info, index) => {\n        return (\n          <span className='error' key={index}>\n            * {info}\n            <br />\n          </span>\n        )\n      })\n      return <div className='col s12 row'>{errors}</div>\n    }\n    return result\n  }\n\n  componentDidMount () {\n    // let selectedStatusFilters = this.props.complaintStatusFilters ? this.props.complaintStatusFilters : this.state.complaintFilterPublishSelected;\n    // this.setState({ complaintFilterPublishSelected: selectedStatusFilters })\n    // this.getComplaintsStatusFilter(selectedStatusFilters.value);\n\n    let { complaintFilters } = this.props\n    if (complaintFilters) {\n      if (complaintFilters.status) {\n        this.setState({\n          complaintFilterStatusSelected: complaintFilters.status\n        })\n      }\n\n      if (complaintFilters.publish) {\n        this.setState({\n          complaintFilterPublishSelected: complaintFilters.publish\n        })\n      }\n\n      if (complaintFilters.date) {\n        this.setState({ startDate: complaintFilters.date.startDate })\n        this.setState({ endDate: complaintFilters.date.endDate })\n      }\n    }\n\n    // let selectedStatusFilter = (this.props.complaintFilters && this.props.complaintFilters.status) ? this.props.complaintFilters.status : this.state.complaintFilterStatusSelected;\n    // this.setState({ complaintFilterStatusSelected: selectedStatusFilter })\n    this.getFilterComplaints(complaintFilters)\n  }\n\n  handleChange = selectedOption => {\n    this.setState({ complaintFilterStatusSelected: selectedOption })\n    let filters = { ...this.props.complaintFilters, status: selectedOption }\n    this.props.updatingComplaintFilters(filters)\n    this.getFilterComplaints(filters)\n  }\n\n  handleChange1 = selectedOptions => {\n    this.setState({ complaintFilterPublishSelected: selectedOptions })\n    let filters = { ...this.props.complaintFilters, publish: selectedOptions }\n    this.props.updatingComplaintFilters(filters)\n    this.getFilterComplaints(filters)\n  }\n\n  updateDateFilter = (startDate, endDate) => {\n    let filters = {\n      ...this.props.complaintFilters,\n      date: { startDate, endDate }\n    }\n    this.props.updatingComplaintFilters(filters)\n    this.getFilterComplaints(filters)\n  }\n\n  complaintNumber = status => {\n    const { complaintNumber } = this.state\n    this.setState({ authenticating: true })\n\n    var thisView = this\n    this.setState({ updatingStatus: true })\n    axios\n      .all([\n        adminService.complaintNumber(\n          complaintNumber,\n          this.props.match.params.complaint_id,\n          status\n        )\n      ])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          // let user_id = resData.data.complaintCreatedBy;\n          if (resData.status && resData.data) {\n            thisView.props.history.push('/complaints/' + resData.data._id)\n            thisView.setState({ authenticating: false })\n            // setTimeout(() => thisView.setState({ modal: false }), 2000);\n          } else {\n            thisView.setState({ apiError: resData.message })\n            thisView.setState({ authenticating: false })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  getComplaints = status => {\n    var thisView = this\n    thisView.setState({ fetchingDetails: true })\n    axios\n      .all([adminService.getComplaints(status)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          let complaints = resData.data ? resData.data : []\n          let complaintsList = complaints.map((eachComplaint, index) => {\n            return {\n              id: eachComplaint._id,\n              details: {\n                index: index,\n                id: eachComplaint._id,\n                title: eachComplaint.complaintTitle,\n                description: eachComplaint.complaintDescription,\n                status: eachComplaint.complaintStatus,\n                date: moment(eachComplaint.createdAt).format(\n                  'Do MMM YYYY hh:mm A'\n                )\n              }\n            }\n          })\n          // thisView.searchInput.focus();\n          thisView.setState({ complaintsList, complaintsMain: complaintsList })\n        }\n        thisView.setState({ fetchingDetails: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in complaint list')\n      })\n  }\n\n  getFilterComplaints = filters => {\n    let status =\n      filters && filters.status && filters.status.value\n        ? filters.status.value\n        : 'All'\n    let publish =\n      filters && filters.publish && filters.publish.value\n        ? filters.publish.value\n        : 'All'\n    if (publish === 'UnPublish') publish = ''\n    // if(publish !== \"Publish\")\n    //     publish = '';\n    let sDate =\n      filters && filters.date && filters.date.startDate\n        ? moment(filters.date.startDate).format('YYYY-MM-DD')\n        : null\n    let eData =\n      filters && filters.date && filters.date.endDate\n        ? moment(filters.date.endDate).format('YYYY-MM-DD')\n        : null\n\n    var thisView = this\n    thisView.setState({ fetchDetails: true })\n    axios\n      .all([adminService.complaintsFilter(status, publish, sDate, eData)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          console.log(resData.data)\n          let complaints = resData.data ? resData.data : []\n          let complaintsList = complaints.map((eachComplaint, index) => {\n            return {\n              id: eachComplaint._id,\n              details: {\n                index: index,\n                id: eachComplaint._id,\n                title: eachComplaint.complaintTitle,\n                description: eachComplaint.complaintDescription,\n                complaintPublish: eachComplaint.complaintPublish,\n                status: eachComplaint.complaintStatus,\n                date: moment(eachComplaint.createdAt).format(\n                  'Do MMM YYYY hh:mm A'\n                )\n              }\n            }\n          })\n          // thisView.searchInput.focus();\n          thisView.setState({ complaintsList, complaintsMain: complaintsList })\n        }\n        thisView.setState({ fetchDetails: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in complaint list')\n      })\n  }\n\n  formatComplaint = (cell, row) => {\n    return (\n      <NavLink to={this.props.match.path + '/' + cell.id} className='mlac-each'>\n        <div className='mlace-head'>\n          <span>{cell.title}</span>\n          <span className='mlacer-date'>{cell.date}</span>\n          {/* <span className=\"mlac-complaintPublish\">\n                        <span className={`${cell.complaintPublish === \"Publish\" ? \"status-Publish\" : \"\"} ${cell.complaintPublish === \"UnPublish\" ? \"status-unPublish\" : \"\"}`}>{cell.complaintPublish}</span>\n                    </span> */}\n          <span className='mlac-status'>\n            <span\n              className={`${\n                cell.status === 'Pending' ? 'status-pending' : ''\n              } ${cell.status === 'In Progress' ? 'status-inprogress' : ''} ${\n                cell.status === 'Closed' ? 'status-closed' : ''\n              }`}\n            >\n              {cell.status}\n            </span>\n          </span>\n        </div>\n        <span className='mlace-content' sm={12}>\n          {cell.description}\n        </span>\n      </NavLink>\n    )\n  }\n\n  filterComplaints = event => {\n    let searchText = this.state.searchText\n    if (event) searchText = event.target.value\n\n    let complaintsList = []\n    if (searchText && searchText.length >= 2) {\n      complaintsList = this.state.complaintsMain.filter(each_complaint => {\n        if (\n          each_complaint.details.status\n            .toLowerCase()\n            .indexOf(searchText.toLowerCase()) > -1 ||\n          each_complaint.details.description\n            .toLowerCase()\n            .indexOf(searchText.toLowerCase()) > -1 ||\n          each_complaint.details.title\n            .toLowerCase()\n            .indexOf(searchText.toLowerCase()) > -1\n        )\n          return true\n        else return false\n      })\n    } else {\n      complaintsList = this.state.complaintsMain\n    }\n\n    this.setState({ searchText, complaintsList })\n  }\n\n  DateRangePicker = () => {\n    // console.log(this.state.startDate, this.state.endDate)\n    // this.setState({ complaintFilterPublishSelected: selectedOption });\n    // this.getComplaintsStatusFilter(selectedOption.value);\n  }\n\n  render () {\n    // const { complaintStatusFilter, complaintStatusFilters, complaintFilters } = this.props;\n    const { complaintFilters } = this.props\n\n    const {\n      complaintsList,\n      fetchingDetails,\n      fetchDetails,\n      complaintFilterStatusOptions,\n      complaintStatusOptions,\n      complaintFilterPublishSelected,\n      complaintFilterStatusSelected,\n      authenticating,\n      apiSuccess,\n      apiError\n    } = this.state\n    // let selectedStatusFilter = complaintStatusFilter ? complaintStatusFilter : complaintFilterStatusSelected;\n    // let selectedStatusFilters = complaintStatusFilters ? complaintStatusFilters : complaintFilterPublishSelected;\n\n    return (\n      <div className='col-span-12 mla-complaints'>\n        <div className='col-span-12 xxl:col-span-9'>\n          <div className='intro-y flex items-end mt-10 mb-10'>\n            <h2 className='text-lg text-black font-medium'>Complaints</h2>\n\n            <Col md={4} className={'ml-auto'}>\n              <div style={{ float: 'right' }}>\n                <i\n                  className='fa fa-refresh '\n                  onClick={() => {\n                    this.getFilterComplaints(complaintFilters)\n                  }}\n                />\n                &nbsp;&nbsp;&nbsp;&nbsp;\n                <i className='fa fa-search ' onClick={this.toggle} />\n              </div>\n            </Col>\n\n            <Modal\n              isOpen={this.state.modal}\n              className='search-popup'\n              style={{ marginTop: '50px', marginLeft: 'auto' }}\n            >\n              <ModalHeader\n                style={{ backgroundColor: '#253c80', color: 'white' }}\n                toggle={this.toggle}\n              >\n                <Translate content='search by complaint number' />{' '}\n              </ModalHeader>\n              <ModalBody>\n                {apiSuccess !== '' && (\n                  <div className='errormsg'>\n                    <Alert color='danger'>{apiSuccess}</Alert>\n                  </div>\n                )}\n                <Form onSubmit={this.handleSubmit}>\n                  <div>\n                    <label>\n                      {' '}\n                      <Translate content='complaint number' />{' '}\n                    </label>\n                    <Input\n                      type='text'\n                      name='complaintNumber'\n                      className='input w-full border mt-2 form-control'\n                      placeholder='Complaint Number'\n                      // validations={[required]}\n                      onChange={this.onChange}\n                      value={this.state.complaintNumber}\n                    />\n                    {this.displayValidationErrors('complaintNumber')}\n                  </div>\n                  {apiError && apiError !== '' && (\n                    <span className='search_error'>{apiError}</span>\n                  )}\n                  {!authenticating ? (\n                    <Button\n                      className=' btn btn-primary mt-3'\n                      color='primary'\n                      type='submit'\n                      disabled={this.isFormValid() ? false : true}\n                    >\n                      <span className='text-white'>\n                        <Translate content='submit' />{' '}\n                      </span>\n                    </Button>\n                  ) : (\n                    <i className='fa fa-spin fa-refresh authentication-loading' />\n                  )}\n                </Form>\n              </ModalBody>\n              {/* <ModalFooter>\n                                {\n                                    !authenticating ?\n                                        <Button className=\" btn btn-primary mt-3\" color=\"primary\" onClick={this.deleteContactHeadService}>\n                                            <span className=\"text-white\">Submit</span>\n                                        </Button> :\n                                        <i className=\"fa fa-spin fa-refresh authentication-loading\" />\n                                }\n                            </ModalFooter> */}\n            </Modal>\n          </div>\n        </div>\n\n        <Row className={'intro-y'}>\n          <Row className='complaint-filters'>\n            <Select\n              name='mlac-status-filter'\n              className='selectbox mlac-status-filter w-full flex-1'\n              onChange={this.handleChange}\n              placeholder='Status Filter'\n              options={complaintFilterStatusOptions}\n              value={complaintFilterStatusSelected}\n              isSearchable\n              style={{ border: 'none !important' }}\n              isLoading={fetchDetails}\n              isDisabled={fetchDetails}\n            />\n            <Select\n              name='mlac-status-filter'\n              className='selectbox mlac-status-filter w-full flex-1'\n              onChange={this.handleChange1}\n              placeholder='Status Filter'\n              options={complaintStatusOptions}\n              value={complaintFilterPublishSelected}\n              isSearchable\n              style={{ border: 'none !important' }}\n              isLoading={fetchDetails}\n              isDisabled={fetchDetails}\n            />\n\n            <div className='date-filter'>\n              <DateRangePicker\n                enableOutsideDays={true}\n                isOutsideRange={() => false}\n                isDayHighlighted={day => day.isSame(new Date(), 'd')}\n                startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n                className='date-filter'\n                endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n                // onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })}\n                // PropTypes.func.isRequired,\n                focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n                onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n                onDatesChange={({ startDate, endDate }) => {\n                  this.setState({ startDate, endDate })\n                  this.updateDateFilter(startDate, endDate)\n                }} // PropTypes.func.isRequired,\n              />\n            </div>\n          </Row>\n\n          {!fetchingDetails ? (\n            <Col sm md lg={12} className='mb-30'>\n              <Card className='card-statistics h-100'>\n                <Row className='mlac-search-container'>\n                  <Col xs={12} sm={12} md={6} lg={12}>\n                    <input\n                      className='form-control mlac-search'\n                      value={this.state.field_search_input}\n                      placeholder={'Search'}\n                      onChange={this.filterComplaints}\n                      onKeyDown={this.filterComplaints}\n                      ref={input => {\n                        this.searchInput = input\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <CardBody>\n                  <BootstrapTable\n                    data={complaintsList}\n                    pagination\n                    striped\n                    condensed\n                    // search\n                  >\n                    <TableHeaderColumn\n                      className='mlac-row'\n                      dataField='details'\n                      dataFormat={this.formatComplaint}\n                      isKey\n                    ></TableHeaderColumn>\n                  </BootstrapTable>\n                </CardBody>\n              </Card>\n            </Col>\n          ) : (\n            <i className='fa fa-spin fa-refresh initial_loading' />\n          )}\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  complaintFilters: state.auth.complaintFilters\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updatingComplaintFilters (data) {\n    dispatch(updateComplaintFilters(data))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Complaints)\n"],"sourceRoot":""}