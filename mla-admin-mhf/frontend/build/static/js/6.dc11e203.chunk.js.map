{"version":3,"sources":["components/containers/albumForm/albumForm.js"],"names":["AlbumForm","props","addVideoDumyyItem","state","inputs","options","push","type","value","setState","removeInputs","index","splice","updateValidators","fieldName","validators","errors","valid","rules","forEach","rule","test","RegExp","message","isFormValid","status","Object","keys","field","displayValidationErrors","validator","map","info","className","key","onChangeFileHandler","e","target","name","files","thisView","file1","Array","from","newfiles","handleChange","date","startDate","addAlbum","fileName","album_title","authenticating","axios","all","adminService","insertAlbum","then","res","resData","data","history","apiError","msg","catch","console","log","getAlbumDetails","album_id","getAlbum","albumDetails","album","albumFiles","replace","id","_id","albumTitle","JSON","parse","albumDate","createdAt","images","albumFileNames","videos","albumVideoFileNames","validate","Success_msg","updateAlbum","match","params","numberoffile","length","style","marginBottom","paddingLeft","display","changeHandler","language","cookie","save","path","renderUsers","item","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","width","onChange","src","config","s3BasicPath","alt","onClick","removeImage","renderVideo","splitData","split","removeVideo","videoTypeChnage","selectedOption","updateIndex","eachVideo","onVideoInputChange","preview","onDragEnd","result","destination","source","reason","droppableId","assign","droppedUser","onDragEndVideo","bind","handleSubmit","fileUpload","i","title","file","Date","Date1","label","selectOptions","languageCodes","load","question","this","location","pathname","indexOf","event","preventDefault","files3Upload","filesReferencesList","eachResponse","filename","eachFile","videoUpload","s3Upload","eachResp","videos3Upload","imagesList","urls","previews","videoFormValid","eachInput","trim","videoUploadError","resDataFiles","videosUrls","uploadCount","directUrlCount","combineFiles","stringify","concat","tempData","content","md","onSubmit","htmlFor","placeholder","autoFocus","droppableProps","for","marginLeft","accept","multiple","fontSize","option","isSearchable","border","fileIndex","justifyContent","alignItems","float","color","disabled","React","Component","connect","auth","dispatch"],"mappings":"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","file":"static/js/6.dc11e203.chunk.js","sourcesContent":["import React from 'react'\nimport cookie from 'react-cookies'\n\nimport './albumForm.scss'\nimport { Row, Col, Card, FormGroup, Button, CardBody, Label } from 'reactstrap'\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport Form from 'react-validation/build/form'\nimport Input from 'react-validation/build/input'\nimport adminService from '../../services/adminService'\nimport validators from '../../validators/validators'\n// import { SortablePane, Pane } from 'react-sortable-pane';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport Select from 'react-select'\n\nimport Translate from 'react-translate-component'\n\n// const apiKeygoogle = \"AIzaSyAeG_Jp2Pu2t2hMWHUk1neKkLUAtL-UGfo\";\n// const apiKey = apiKeygoogle;\n\n// const googleTranslate = require(\"google-translate\")(apiKey);\n\nclass AlbumForm extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.onChange = this.onChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n    const data = []\n    for (let i = 1, len = 7; i < len; i++) {\n      data.push({\n        title: `rows${i}`\n      })\n    }\n\n    this.state = {\n      album_title: '',\n      apiError: '',\n      file: '',\n      fileUpload: '',\n      newfiles: [],\n      startDate: new Date(),\n      Date1: '',\n      authenticating: false,\n      updateAlbum: false,\n      albumDetails: {},\n\n      inputs: [],\n      options: [\n        { label: 'upload video', value: 2 },\n        { label: 'Youtube url', value: 1 }\n      ],\n\n      selectOptions: [\n        { label: 'upload video', value: 2 },\n        { label: 'Youtube url', value: 1 }\n      ],\n\n      // items: getItems(5),\n      languageCodes: [],\n      language: cookie.load('language') ? cookie.load('language') : 'en',\n      question: cookie.load('question')\n        ? cookie.load('question')\n        : // : \"What language do you prefer to read ?\"\n          ''\n    }\n    this.validators = validators\n  }\n\n  componentDidMount () {\n    console.log(this.props)\n    if (this.props.location.pathname.indexOf('update') > -1) {\n      this.setState({ updateAlbum: true })\n\n      this.getAlbumDetails(this.props.match.params.album_id)\n    }\n  }\n\n  addVideoDumyyItem = () => {\n    let { inputs, options } = this.state\n    inputs.push({ type: options[0], value: '' })\n    this.setState({ inputs })\n  }\n\n  removeInputs = index => {\n    this.state.inputs.splice(index, 1)\n    this.setState({ inputs: this.state.inputs })\n  }\n\n  updateValidators = (fieldName, value) => {\n    this.validators[fieldName].errors = []\n    this.validators[fieldName].state = value\n    this.validators[fieldName].valid = true\n    this.validators[fieldName].rules.forEach(rule => {\n      if (rule.test instanceof RegExp) {\n        if (!rule.test.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      } else if (typeof rule.test === 'function') {\n        if (!rule.test(value)) {\n          this.validators[fieldName].errors.push(rule.message)\n          this.validators[fieldName].valid = false\n        }\n      }\n    })\n  }\n\n  isFormValid = () => {\n    let status = true\n    Object.keys(this.validators).forEach(field => {\n      if (field === 'album_title') {\n        if (!this.validators[field].valid) {\n          status = false\n        }\n      }\n    })\n    return status\n  }\n\n  displayValidationErrors = fieldName => {\n    const validator = this.validators[fieldName]\n    const result = ''\n    if (validator && !validator.valid) {\n      const errors = validator.errors.map((info, index) => {\n        return (\n          <span className='error' key={index}>\n            * {info}\n            <br />\n          </span>\n        )\n      })\n      return <div className='col s12 row'>{errors}</div>\n    }\n    return result\n  }\n\n  onChange (e) {\n    this.setState({ [e.target.name]: e.target.value })\n    this.updateValidators([e.target.name], e.target.value)\n  }\n\n  onChangeFileHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.files\n    })\n    let thisView = this\n    let file1 = Array.from(e.target.files)\n    thisView.setState({ newfiles: file1 })\n  }\n\n  handleChange = date => {\n    this.setState({\n      startDate: date\n    })\n  }\n\n  handleSubmit (event) {\n    // this.form.validateAll();\n\n    event.preventDefault()\n\n    // if (!this.state.event_catergory) {\n    //         this.setState({ event_catergoryError: true });\n    //     return;\n    // } else {\n    //     this.setState({ event_catergoryError: false, event_sub_catergoryError: false });\n    // }\n\n    this.setState({ authenticating: true })\n\n    this.files3Upload()\n  }\n\n  fileUpload () {\n    const { file, albumFileNames } = this.state\n    var thisView = this\n    this.setState({ authenticating: true })\n    axios\n      .all([adminService.fileUpload(file)])\n      .then(function (res) {\n        if (res) {\n          let resData = res[0].data\n          let filesReferencesList = []\n\n          resData.map(eachResponse => {\n            if (eachResponse.filename)\n              filesReferencesList.push(eachResponse.filename)\n            return true\n          })\n\n          if (albumFileNames && albumFileNames.length > 0) {\n            albumFileNames.map(eachFile => {\n              return filesReferencesList.push(eachFile)\n            })\n          }\n\n          thisView.videoUpload(filesReferencesList)\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in file upload')\n      })\n  }\n\n  files3Upload () {\n    const { file, albumFileNames } = this.state\n\n    let files = []\n    if (file && file.length > 0) {\n      Object.keys(file).map((key, index) => {\n        files.push(file[key])\n        return true\n      })\n    }\n\n    this.setState({ authenticating: true })\n    var thisView = this\n    axios\n      .all(files.map(eachFile => adminService.s3Upload(eachFile)))\n      .then(function (res) {\n        if (res) {\n          let filesReferencesList = []\n          res.map(eachResp => {\n            let resData = eachResp.data\n            if (resData.fileName) {\n              filesReferencesList.push(resData.fileName)\n            }\n            return true\n          })\n\n          if (albumFileNames && albumFileNames.length > 0) {\n            albumFileNames.map(eachFile => {\n              return filesReferencesList.push(eachFile)\n            })\n          }\n\n          thisView.videos3Upload(filesReferencesList)\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in file upload')\n      })\n  }\n\n  videoUpload (imagesList) {\n    const { inputs, albumVideoFileNames } = this.state\n\n    let files = [],\n      urls = [],\n      previews = []\n    let videoFormValid = true\n    inputs.map(eachInput => {\n      if (eachInput.type && eachInput.type.value === 1) {\n        if (eachInput.value && eachInput.value.trim() !== '')\n          urls.push(eachInput.value)\n        else videoFormValid = false\n      } else if (eachInput.type && eachInput.type.value === 2) {\n        if (eachInput.value) {\n          Object.keys(eachInput.value).map(key => {\n            files.push(eachInput.value[key])\n            return true\n          })\n        } else videoFormValid = false\n      }\n      if (eachInput.preview) previews.push(eachInput.preview[0])\n      else videoFormValid = false\n      return true\n    })\n\n    if (!videoFormValid) {\n      this.setState({ videoUploadError: true, authenticating: false })\n      return\n    } else this.setState({ videoUploadError: false })\n\n    var thisView = this\n    axios\n      .all([adminService.fileUpload(files), adminService.fileUpload(previews)])\n      .then(function (res) {\n        if (res) {\n          let resData = res[0].data\n          let resDataFiles = res[1].data\n\n          let videosUrls = []\n          let uploadCount = 0\n          let directUrlCount = 0\n          inputs.map((eachInput, index) => {\n            if (eachInput.type && eachInput.type.value === 1) {\n              videosUrls.push(\n                urls[directUrlCount] + '||||' + resDataFiles[index]['filename']\n              )\n              directUrlCount += 1\n            } else if (eachInput.type && eachInput.type.value === 2) {\n              videosUrls.push(\n                resData[uploadCount]['filename'] +\n                  '||||' +\n                  resDataFiles[index]['filename']\n              )\n              uploadCount++\n            }\n            return true\n          })\n\n          if (albumVideoFileNames && albumVideoFileNames.length > 0) {\n            albumVideoFileNames.map(eachFile => {\n              return videosUrls.push(eachFile)\n            })\n          }\n\n          let combineFiles = {\n            images: imagesList,\n            videos: videosUrls\n          }\n\n          if (thisView.state.updateAlbum)\n            thisView.updateAlbum(JSON.stringify(combineFiles))\n          else thisView.addAlbum(JSON.stringify(combineFiles))\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in file upload')\n      })\n  }\n\n  videos3Upload (imagesList) {\n    const { inputs, albumVideoFileNames } = this.state\n\n    let files = [],\n      urls = [],\n      previews = []\n    let videoFormValid = true\n    inputs.map((eachInput, index) => {\n      if (eachInput.type && eachInput.type.value === 1) {\n        if (eachInput.value && eachInput.value.trim() !== '')\n          urls.push(eachInput.value)\n        else videoFormValid = false\n      } else if (eachInput.type && eachInput.type.value === 2) {\n        if (eachInput.value) {\n          Object.keys(eachInput.value).map(key => {\n            files.push(eachInput.value[key])\n            return true\n          })\n        } else videoFormValid = false\n      }\n      if (eachInput.preview) previews.push(eachInput.preview[0])\n      else videoFormValid = false\n      return true\n    })\n\n    if (!videoFormValid) {\n      this.setState({ videoUploadError: true, authenticating: false })\n      return\n    } else this.setState({ videoUploadError: false })\n\n    let combineFiles = files.concat(previews)\n\n    var thisView = this\n    axios\n      .all(combineFiles.map(eachFile => adminService.s3Upload(eachFile)))\n      .then(function (res) {\n        if (res) {\n          // let resData = res[0].data;\n          // let resDataFiles = res[1].data;\n\n          let resData = []\n          let resDataFiles = []\n          res.map((eachResp, index) => {\n            let tempData = eachResp.data\n            if (files.length >= index + 1) {\n              resData.push({ filename: tempData.fileName })\n            } else {\n              resDataFiles.push({ filename: tempData.fileName })\n            }\n            return true\n          })\n\n          let videosUrls = []\n          let uploadCount = 0\n          let directUrlCount = 0\n          inputs.map((eachInput, index) => {\n            if (eachInput.type && eachInput.type.value === 1) {\n              videosUrls.push(\n                urls[directUrlCount] + '||||' + resDataFiles[index]['filename']\n              )\n              directUrlCount += 1\n            } else if (eachInput.type && eachInput.type.value === 2) {\n              videosUrls.push(\n                resData[uploadCount]['filename'] +\n                  '||||' +\n                  resDataFiles[index]['filename']\n              )\n              uploadCount++\n            }\n            return true\n          })\n\n          if (albumVideoFileNames && albumVideoFileNames.length > 0) {\n            albumVideoFileNames.map(eachFile => {\n              videosUrls.push(eachFile)\n              return true\n            })\n          }\n\n          let combineFiles = {\n            images: imagesList,\n            videos: videosUrls\n          }\n\n          if (thisView.state.updateAlbum)\n            thisView.updateAlbum(JSON.stringify(combineFiles))\n          else thisView.addAlbum(JSON.stringify(combineFiles))\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in file upload')\n      })\n  }\n\n  addAlbum = fileName => {\n    const { album_title } = this.state\n    var thisView = this\n\n    this.setState({ authenticating: true })\n    axios\n      .all([adminService.insertAlbum(album_title, fileName)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            thisView.props.history.push('/albums')\n          } else {\n            thisView.setState({ apiError: resData.msg })\n          }\n        }\n        thisView.setState({ authenticating: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  getAlbumDetails = album_id => {\n    var thisView = this\n    axios\n      .all([adminService.getAlbum(album_id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            let album = resData.data\n            let albumDetails = {}\n            let albumFiles = album.albumFiles\n              ? album.albumFiles.replace(/quot;/g, '\"')\n              : ''\n            // let albumFiles = album.albumFiles ? album.albumFiles.replace(/\\&quot;/g, '\"' ) : \"\";\n            albumDetails = {\n              id: album._id,\n              albumTitle: album.albumTitle,\n              albumFiles: JSON.parse(albumFiles),\n              albumDate: album.createdAt\n            }\n            console.log(albumDetails)\n            if (albumDetails.albumFiles) {\n              if (albumDetails.albumFiles && albumDetails.albumFiles.images) {\n                let albumFileNames = albumDetails.albumFiles.images\n                thisView.setState({ albumFileNames })\n              }\n              if (albumDetails.albumFiles && albumDetails.albumFiles.videos) {\n                let albumVideoFileNames = albumDetails.albumFiles.videos\n                thisView.setState({ albumVideoFileNames })\n              }\n            }\n\n            let album_title = albumDetails.albumTitle\n            let fileName = albumDetails.albumFiles\n\n            let validate = {\n              album_title\n            }\n\n            // to update in the state variable\n            Object.keys(validate).map(key => {\n              thisView.updateValidators([key], validate[key])\n              return true\n            })\n\n            thisView.setState({ album_title, fileName })\n            thisView.setState({ albumDetails })\n            thisView.setState({ Success_msg: '' })\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  updateAlbum = fileName => {\n    const { album_title } = this.state\n    var thisView = this\n    let id = this.props.match.params.album_id\n\n    this.setState({ authenticating: true })\n    axios\n      .all([adminService.updateAlbum(album_title, fileName, id)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            // thisView.props.history.push(\"/mlaprofile\");\n            thisView.props.history.push('/albums/' + id)\n          } else {\n            thisView.setState({ apiError: resData.msg })\n          }\n        }\n        thisView.setState({ authenticating: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  numberoffile = () => {\n    const { newfiles } = this.state\n    if (newfiles.length === 0) {\n      return null\n    }\n    return (\n      <p\n        style={{\n          marginBottom: '0rem',\n          paddingLeft: '4px',\n          display: 'inline-block'\n        }}\n      >\n        file({newfiles.length})\n      </p>\n    )\n  }\n\n  changeHandler = language => {\n    // let cookieLanguage = cookie.load(\"language\");\n    // let transQuestion = \"\";\n\n    // const translating = transQuestion => {\n    //     if (question !== transQuestion) {\n    //         this.setState({ question: transQuestion });\n    //         cookie.save(\"question\", transQuestion, { path: \"/\" });\n    //     }\n    // };\n\n    this.setState({ language })\n    cookie.save('language', language, { path: '/' })\n  }\n\n  renderUsers = (item, index) => {\n    return (\n      <Draggable key={index} draggableId={index + ' '} index={index}>\n        {provided => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className='item mx-auto'>\n              {/* <div>{index + 1}</div> */}\n              <div>\n                <img\n                  className='imgefiles mx-auto'\n                  style={{ width: '230px' }}\n                  name='file'\n                  onChange={this.onChangeFileHandler}\n                  src={this.props.config.s3BasicPath + item}\n                  alt='avatar'\n                />\n              </div>\n              <div className='transp-layer'></div>\n              <i\n                className='fa fa-window-close asset-remove'\n                onClick={() => {\n                  this.removeImage(item, index)\n                }}\n              />\n              {/* <div className='name'>\n                            <div>{item.firstName}</div>\n                            <div>{item.lastName}</div>\n                        </div> */}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    )\n  }\n\n  removeImage = (item, index) => {\n    console.log(item, index)\n    let albumFileNames = this.state.albumFileNames\n    albumFileNames.splice(index, 1)\n    this.setState({ albumFileNames })\n  }\n\n  renderVideo = (item, index) => {\n    let splitData = item.split('||||')\n\n    return (\n      <Draggable key={index} draggableId={index + ' '} index={index}>\n        {provided => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <div className='item mx-auto'>\n              <div key={index} className='player-wrapper'>\n                <img\n                  className='imgefiles mx-auto'\n                  style={{ width: '230px' }}\n                  name='file'\n                  onChange={this.onChangeFileHandler}\n                  src={this.props.config.s3BasicPath + splitData[1]}\n                  alt='avatar'\n                />\n                <div className='transp-layer'></div>\n                <i\n                  className='fa fa-window-close asset-remove'\n                  onClick={() => {\n                    this.removeVideo(item, index)\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Draggable>\n    )\n  }\n\n  removeVideo = (item, index) => {\n    console.log(item, index)\n    let albumVideoFileNames = this.state.albumVideoFileNames\n    albumVideoFileNames.splice(index, 1)\n    this.setState({ albumVideoFileNames })\n  }\n\n  videoTypeChnage = (selectedOption, updateIndex) => {\n    let inputs = this.state.inputs\n\n    inputs = inputs.map((eachVideo, index) => {\n      if (updateIndex === index) {\n        return { ...eachVideo, type: selectedOption }\n      } else {\n        return { ...eachVideo }\n      }\n    })\n    this.setState({ inputs })\n  }\n\n  onVideoInputChange = (e, updateIndex, type) => {\n    // this.updateValidators([e.target.name], e.target.value);\n    console.log(e.target.files)\n    let inputs = this.state.inputs\n\n    inputs = inputs.map((eachVideo, index) => {\n      if (updateIndex === index) {\n        if (type === 'preview') {\n          let files = Array.from(e.target.files)\n          return { ...eachVideo, preview: files }\n        } else {\n          return {\n            ...eachVideo,\n            value: type === 'url' ? e.target.value : e.target.files\n          }\n        }\n      } else {\n        return { ...eachVideo }\n      }\n    })\n    console.log(inputs)\n    this.setState({ inputs })\n  }\n\n  onDragEnd = result => {\n    const { destination, source, reason } = result\n    // Not a thing to do...\n    if (!destination || reason === 'CANCEL') {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    const albumFileNames = Object.assign([], this.state.albumFileNames)\n    const droppedUser = this.state.albumFileNames[source.index]\n\n    albumFileNames.splice(source.index, 1)\n    albumFileNames.splice(destination.index, 0, droppedUser)\n    this.setState({\n      albumFileNames\n    })\n  }\n\n  onDragEndVideo = result => {\n    const { destination, source, reason } = result\n    // Not a thing to do...\n    if (!destination || reason === 'CANCEL') {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    const albumVideoFileNames = Object.assign(\n      [],\n      this.state.albumVideoFileNames\n    )\n    const droppedUser = this.state.albumVideoFileNames[source.index]\n\n    albumVideoFileNames.splice(source.index, 1)\n    albumVideoFileNames.splice(destination.index, 0, droppedUser)\n    this.setState({\n      albumVideoFileNames\n    })\n  }\n\n  render () {\n    const { authenticating, albumFileNames, albumVideoFileNames } = this.state\n    return (\n      <div className='col-span-12 mla-album-form'>\n        <div className='grid grid-cols-12 gap-6 mt-8'>\n          <div className='col-span-12 lg:col-span-10'>\n            <div className='box'>\n              <div className='flex flex-col sm:flex-row items-center p-5 border-b border-gray-200'>\n                <h2 className='font-medium text-base mr-auto'>\n                  <Translate content='album form' />\n                </h2>\n              </div>\n\n              <Row>\n                <Col md={12}>\n                  <Card className=' card-statistics mb-5'>\n                    <CardBody>\n                      <Form onSubmit={this.handleSubmit}>\n                        <Row>\n                          <Col md={12}>\n                            <FormGroup>\n                              <Label>\n                                <Translate content='title' />\n                              </Label>\n                              <Input\n                                htmlFor='drugName'\n                                type='text'\n                                name='album_title'\n                                // validations={[required]}\n                                className='form-control'\n                                value={this.state.album_title}\n                                onChange={this.onChange}\n                                placeholder=' Title'\n                                autoFocus={true}\n                              />\n                              {this.displayValidationErrors('album_title')}\n                            </FormGroup>\n                          </Col>\n                        </Row>\n\n                        <Row>\n                          {albumFileNames && albumFileNames.length > 0 && (\n                            <Col md={6}>\n                              <Translate content='images' />\n\n                              <DragDropContext onDragEnd={this.onDragEnd}>\n                                <div className='container images_list'>\n                                  <div className='users'>\n                                    <Droppable droppableId='dp1'>\n                                      {provided => (\n                                        <div\n                                          ref={provided.innerRef}\n                                          {...provided.droppableProps}\n                                        >\n                                          {albumFileNames.map(this.renderUsers)}\n                                          {provided.placeholder}\n                                        </div>\n                                      )}\n                                    </Droppable>\n                                  </div>\n                                </div>\n                              </DragDropContext>\n                            </Col>\n                          )}\n\n                          {albumVideoFileNames &&\n                            albumVideoFileNames.length > 0 && (\n                              <Col md={6}>\n                                <Translate content='videos' />\n\n                                <DragDropContext\n                                  onDragEnd={this.onDragEndVideo}\n                                >\n                                  <div className='container videos_list'>\n                                    <div className='users'>\n                                      <Droppable droppableId='dp1'>\n                                        {provided => (\n                                          <div\n                                            ref={provided.innerRef}\n                                            {...provided.droppableProps}\n                                          >\n                                            {albumVideoFileNames.map(\n                                              this.renderVideo\n                                            )}\n                                            {provided.placeholder}\n                                          </div>\n                                        )}\n                                      </Droppable>\n                                    </div>\n                                  </div>\n                                </DragDropContext>\n                              </Col>\n                            )}\n                        </Row>\n\n                        <Row>\n                          <Col md={12}>\n                            <FormGroup>\n                              <Label>\n                                {' '}\n                                <Translate content='upload images' />\n                              </Label>\n\n                              <label\n                                for='file-upload'\n                                style={{ marginLeft: '5px' }}\n                                className='custom-file-upload'\n                              >\n                                <i className='text-info fa fa-cloud-upload'></i>\n                                <Translate content='choose file' />\n                              </label>\n                              <input\n                                type='file'\n                                id='file-upload'\n                                name='file'\n                                accept='image/*'\n                                onChange={this.onChangeFileHandler}\n                                multiple\n                              />\n\n                              {this.numberoffile()}\n\n                              {this.state.newfiles &&\n                                this.state.newfiles.map((files, index) => (\n                                  <p style={{ marginBottom: '0rem' }}>\n                                    {files.name}\n                                  </p>\n                                ))}\n                            </FormGroup>\n                          </Col>\n                        </Row>\n                        <hr />\n\n                        <Row>\n                          <Col md={6} className='mt-2 mb-2'>\n                            <Translate content='upload videos' />\n                          </Col>\n                          {this.state.inputs && this.state.inputs.length === 0 && (\n                            <Col md={6} className='mt-2 mb-2'>\n                              <i\n                                style={{ fontSize: '15px' }}\n                                className='fa fa-plus circle-icon add-first-video'\n                                onClick={this.addVideoDumyyItem}\n                              />\n                            </Col>\n                          )}\n                        </Row>\n\n                        {this.state.inputs.map((eachVideo, index) => {\n                          return (\n                            <div key={index} className='mt-3'>\n                              <Row>\n                                <Col md={3}>\n                                  <FormGroup>\n                                    <Label>\n                                      <Translate content='select' />{' '}\n                                    </Label>\n                                    <Select\n                                      name=''\n                                      className='selectbox '\n                                      onChange={option => {\n                                        this.videoTypeChnage(option, index)\n                                      }}\n                                      options={this.state.options}\n                                      isSearchable\n                                      value={eachVideo.type}\n                                      // validations={[required]}\n                                      style={{ border: 'none !important' }}\n                                    />\n                                  </FormGroup>\n                                </Col>\n                                {eachVideo.type && (\n                                  <Col md={3}>\n                                    {eachVideo.type.value === 1 ? (\n                                      <FormGroup>\n                                        <Label>\n                                          <Translate content='add url' />\n                                        </Label>\n                                        {/* <span>{eachVideo.value}</span> */}\n                                        <input\n                                          type='text'\n                                          name={'addCustomUrl' + index}\n                                          // validations={[required]}\n                                          className='form-control video-url'\n                                          value={\n                                            eachVideo.value\n                                              ? eachVideo.value\n                                              : ''\n                                          }\n                                          onChange={e => {\n                                            this.onVideoInputChange(\n                                              e,\n                                              index,\n                                              'url'\n                                            )\n                                          }}\n                                          placeholder='Add Url'\n                                        />\n                                        {/* {this.displayValidationErrors('addUrl')} */}\n                                      </FormGroup>\n                                    ) : (\n                                      <FormGroup>\n                                        <Label>\n                                          {' '}\n                                          <Translate content='upload videos' />\n                                        </Label>\n\n                                        <label\n                                          for={'file-upload' + index}\n                                          style={{ marginLeft: '5px' }}\n                                          className='custom-file-upload'\n                                        >\n                                          <i className='text-info fa fa-cloud-upload'></i>\n                                          {eachVideo.value &&\n                                          eachVideo.value.length > 0 ? (\n                                            <p className='video-file'>\n                                              {eachVideo.value[0]['name']}\n                                            </p>\n                                          ) : (\n                                            <Translate content='choose file' />\n                                          )}\n                                        </label>\n                                        <input\n                                          type='file'\n                                          id={'file-upload' + index}\n                                          name='file'\n                                          accept='video/*'\n                                          onChange={e => {\n                                            this.onVideoInputChange(\n                                              e,\n                                              index,\n                                              'video'\n                                            )\n                                          }}\n                                          multiple\n                                        />\n                                        {/* <input type=\"file\" name=\"file\" accept=\"video/*\"\n                                                                                     onChange={(e) => { this.onVideoInputChange(e, index, \"video\") }} /> */}\n\n                                        {/* {this.numberoffile()} */}\n\n                                        {eachVideo.type.value &&\n                                          Object.keys(eachVideo.type.value).map(\n                                            (key, fileIndex) => (\n                                              <p\n                                                style={{ marginBottom: '0rem' }}\n                                                key={fileIndex}\n                                              >\n                                                {eachVideo.type.value[key].name}\n                                              </p>\n                                            )\n                                          )}\n                                      </FormGroup>\n                                    )}\n                                  </Col>\n                                )}\n                                <Col md={3}>\n                                  <FormGroup>\n                                    <Label>\n                                      <Translate content='video preview' />{' '}\n                                    </Label>\n                                    <label\n                                      for={'file-upload-preview' + index}\n                                      style={{ marginLeft: '5px' }}\n                                      className='custom-file-upload'\n                                    >\n                                      <i className='text-info fa fa-cloud-upload'></i>\n                                      {eachVideo.preview &&\n                                      eachVideo.preview.length > 0 ? (\n                                        <p className='preview-file'>\n                                          {eachVideo.preview[0]['name']}\n                                        </p>\n                                      ) : (\n                                        <Translate content='choose file' />\n                                      )}\n                                    </label>\n                                    <input\n                                      type='file'\n                                      id={'file-upload-preview' + index}\n                                      name={'file' + index}\n                                      accept='image/*'\n                                      onChange={e => {\n                                        this.onVideoInputChange(\n                                          e,\n                                          index,\n                                          'preview'\n                                        )\n                                      }}\n                                    />\n                                  </FormGroup>\n                                </Col>\n\n                                <Col\n                                  md={2}\n                                  style={{\n                                    display: 'flex',\n                                    justifyContent: 'center',\n                                    alignItems: 'center'\n                                  }}\n                                >\n                                  <div className='text-center'>\n                                    <i\n                                      style={{ fontSize: '15px' }}\n                                      className='fa fa-close circle-icon-close'\n                                      onClick={() => this.removeInputs(index)}\n                                    />\n                                    &nbsp;&nbsp;\n                                    <i\n                                      style={{ fontSize: '15px' }}\n                                      className='fa fa-plus circle-icon'\n                                      onClick={this.addVideoDumyyItem}\n                                    />\n                                  </div>\n                                </Col>\n                              </Row>\n                            </div>\n                          )\n                        })}\n\n                        {!authenticating ? (\n                          <Button\n                            style={{ float: 'right' }}\n                            className=' btn btn-primary mt-3'\n                            color='primary'\n                            type='submit'\n                            disabled={this.isFormValid() ? false : true}\n                          >\n                            {this.state.updateAlbum ? (\n                              <span className='text-white'>\n                                <Translate content='update' />\n                              </span>\n                            ) : (\n                              <span className='text-white'>\n                                <Translate content='publish' />\n                              </span>\n                            )}\n                          </Button>\n                        ) : (\n                          <i\n                            className='fa fa-spin fa-refresh authentication-loading'\n                            style={{ float: 'right' }}\n                          />\n                        )}\n                      </Form>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  config: state.auth.config\n})\n\nconst mapDispatchToProps = dispatch => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumForm)\n"],"sourceRoot":""}