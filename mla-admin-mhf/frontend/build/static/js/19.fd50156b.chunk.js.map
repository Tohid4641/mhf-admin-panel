{"version":3,"sources":["components/containers/prepareMail/prepareMail.js"],"names":["PrepareMail","props","getMailID","thisView","axios","all","adminService","getContactList","then","res","resData","data","status","options","map","mail","name","email","role","id","_id","setState","apiError","catch","console","log","message","onChange","e","target","value","onSelect","selectedList","selectedItem","onRemove","removedItem","closeModal","preventDefault","formSubmit","state","profileDetails","this","event_title","subject","description","content","title","selectedValue","className","isOpen","toggle","onSubmit","style","backgroundColor","color","addevent","md","selectedValues","displayValue","marginTop","type","apiKey","init","plugins","toolbar","branding","onClick","React","Component"],"mappings":"oUAkBMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAeRC,UAAY,WACV,IAAIC,EAAQ,eACZC,IACGC,IAAI,CAACC,IAAaC,mBAClBC,MAAK,SAAUC,GACd,GAAIA,EAAI,GAAI,CACV,IAAIC,EAAUD,EAAI,GAAGE,KACrB,GAAID,EAAQE,QACV,GAAIF,EAAQC,KAAM,CAChB,IAAIE,EAAUH,EAAQC,KAAKG,KAAI,SAAAC,GAC7B,MAAO,CACLC,KAAMD,EAAKE,MAAQ,MAAQF,EAAKG,KAChCC,GAAIJ,EAAKK,QAIbjB,EAASkB,SAAS,CAAER,kBAGtBV,EAASkB,SAAS,CAAEC,SAAUZ,QAInCa,OAAM,SAAUd,GACfe,QAAQC,IAAIhB,GACRA,EAAIiB,SAASF,QAAQC,IAAI,4CAzCf,EA6CpBE,SAAW,SAAAC,GACT,EAAKP,SAAL,eAAiBO,EAAEC,OAAOb,KAAOY,EAAEC,OAAOC,SA9CxB,EAiDpBC,SAAW,SAACC,EAAcC,KAjDN,EAmDpBC,SAAW,SAACF,EAAcG,KAnDN,EAqDpBC,WAAa,SAAAR,GACXA,EAAES,iBACF,EAAKpC,MAAMmC,cAvDO,EA0DpBE,WAAa,SAAAV,GACXA,EAAES,iBACF,EAAKpC,MAAMmC,cAzDX,EAAKG,MAAQ,CACXC,eAAgB,GAChB3B,QAAS,IALO,E,qDAQpB,WACE4B,KAAKpB,SAAS,CACZqB,YAAaD,KAAKxC,MAAM0C,QACxBC,YAAaH,KAAKxC,MAAM4C,UAE1BJ,KAAKvC,c,oBAkDP,WACE,IAAQ4C,EAAUL,KAAKxC,MAAf6C,MACR,EAA6DL,KAAKF,MAA1D1B,EAAR,EAAQA,QAASkC,EAAjB,EAAiBA,cAAeL,EAAhC,EAAgCA,YAAaE,EAA7C,EAA6CA,YAE7C,OACE,yBAAKI,UAAU,gCACb,kBAAC,IAAD,CAAOC,QAAQ,EAAMC,OAAQT,KAAKL,WAAYY,UAAW,cACvD,kBAAC,IAAD,CAAMG,SAAUV,KAAKH,YACnB,kBAAC,IAAD,CACEU,UAAW,oBACXI,MAAO,CAAEC,gBAAiB,UAAWC,MAAO,SAC5CJ,OAAQT,KAAKc,UAEZT,GAEH,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKU,GAAI,IACP,kBAAC,IAAD,WACA,kBAAC,cAAD,CACE3C,QAASA,EACT4C,eAAgBV,EAChBhB,SAAUU,KAAKV,SACfG,SAAUO,KAAKP,SACfwB,aAAa,WAKnB,kBAAC,IAAD,CAAKN,MAAO,CAAEO,UAAW,SACvB,kBAAC,IAAD,CAAKH,GAAI,IACP,kBAAC,IAAD,cACA,2BACEI,KAAK,OACL5C,KAAK,cAELgC,UAAU,eACVlB,MAAOY,EACPf,SAAUc,KAAKd,aAIrB,kBAAC,IAAD,CAAKyB,MAAO,CAAEO,UAAW,SACtB,IACD,kBAAC,IAAD,KAEE,kBAAC,IAAD,CACE3C,KAAK,cACLW,SAAUc,KAAKd,SACfqB,UAAU,eACVlB,MAAOc,EACPiB,OAAO,mDACPC,KAAM,CACJC,QAAS,kBACTC,QACE,oEACFC,UAAU,QAOpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEjB,UAAU,oBACVM,MAAM,UACNM,KAAK,UAHP,OAMU,IACV,kBAAC,IAAD,CACEZ,UAAU,oBACVM,MAAM,SACNY,QAASzB,KAAKL,YAHhB,kB,GAvIY+B,IAAMC,WAqJjBpE","file":"static/js/19.fd50156b.chunk.js","sourcesContent":["import React from 'react'\nimport './prepareMail.scss'\nimport {\n  Row,\n  Col,\n  Form,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Label\n} from 'reactstrap'\nimport axios from 'axios'\nimport { Editor } from '@tinymce/tinymce-react'\nimport { Multiselect } from 'multiselect-react-dropdown'\nimport adminService from '../../services/adminService'\n\nclass PrepareMail extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      profileDetails: [],\n      options: []\n    }\n  }\n  componentDidMount () {\n    this.setState({\n      event_title: this.props.subject,\n      description: this.props.content\n    })\n    this.getMailID()\n  }\n\n  getMailID = () => {\n    var thisView = this\n    axios\n      .all([adminService.getContactList()])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            if (resData.data) {\n              let options = resData.data.map(mail => {\n                return {\n                  name: mail.email + '   ' + mail.role,\n                  id: mail._id\n                }\n              })\n\n              thisView.setState({ options })\n            }\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onSelect = (selectedList, selectedItem) => {}\n\n  onRemove = (selectedList, removedItem) => {}\n\n  closeModal = e => {\n    e.preventDefault()\n    this.props.closeModal()\n  }\n\n  formSubmit = e => {\n    e.preventDefault()\n    this.props.closeModal()\n  }\n\n  render () {\n    const { title } = this.props\n    const { options, selectedValue, event_title, description } = this.state\n\n    return (\n      <div className='col-span-12 mla-mail-prepare'>\n        <Modal isOpen={true} toggle={this.closeModal} className={'mail-modal'}>\n          <Form onSubmit={this.formSubmit}>\n            <ModalHeader\n              className={'mail-model-header'}\n              style={{ backgroundColor: '#253c80', color: 'white' }}\n              toggle={this.addevent}\n            >\n              {title}\n            </ModalHeader>\n            <ModalBody>\n              <Row>\n                <Col md={12}>\n                  <Label>To</Label>\n                  <Multiselect\n                    options={options} // Options to display in the dropdown\n                    selectedValues={selectedValue} // Preselected value to persist in dropdown\n                    onSelect={this.onSelect} // Function will trigger on select event\n                    onRemove={this.onRemove} // Function will trigger on remove event\n                    displayValue='name' // Property name to display in the dropdown options\n                  />\n                </Col>\n              </Row>\n\n              <Row style={{ marginTop: '15px' }}>\n                <Col md={12}>\n                  <Label>Title</Label>\n                  <input\n                    type='text'\n                    name='event_title'\n                    // validations={[required]}\n                    className='form-control'\n                    value={event_title}\n                    onChange={this.onChange}\n                  />\n                </Col>\n              </Row>\n              <Row style={{ marginTop: '15px' }}>\n                {' '}\n                <Col>\n                  {/* <div class=\"form-group\"> */}\n                  <Editor\n                    name='description'\n                    onChange={this.onChange}\n                    className='form-control'\n                    value={description}\n                    apiKey='tw738oi7eejqelkvij9eko7n5fnt0xd7v90seimw8zjvehzc'\n                    init={{\n                      plugins: 'link image code',\n                      toolbar:\n                        'undo redo | bold italic | alignleft aligncenter alignright | code',\n                      branding: false\n                    }}\n                  />\n                  {/* </div> */}\n                </Col>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                className=' btn btn-primary '\n                color='primary'\n                type='submit'\n              >\n                Add\n              </Button>{' '}\n              <Button\n                className=' btn btn-primary '\n                color='danger'\n                onClick={this.closeModal}\n              >\n                Cancel\n              </Button>\n            </ModalFooter>\n          </Form>\n        </Modal>\n      </div>\n    )\n  }\n}\nexport default PrepareMail\n"],"sourceRoot":""}