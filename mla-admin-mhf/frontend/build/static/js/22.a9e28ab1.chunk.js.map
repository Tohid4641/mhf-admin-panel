{"version":3,"sources":["components/containers/users/users.js"],"names":["Users","props","getUserList","thisView","setState","fetchingDetails","axios","all","adminService","userList","then","res","resData","data","console","log","status","map","eachUser","index","sNo","fullName","voterId","userAddress","mobileNo","userMain","apiError","catch","message","state","this","className","content","sm","md","lg","pagination","striped","condensed","search","width","dataField","isKey","React","Component"],"mappings":"sRASMA,E,kDACJ,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IAYRC,YAAc,WACZ,IAAIC,EAAQ,eACZA,EAASC,SAAS,CAAEC,iBAAiB,IACrCC,IACGC,IAAI,CAACC,IAAaC,aAClBC,MAAK,SAAUC,GACd,GAAIA,EAAI,GAAI,CACV,IAAIC,EAAUD,EAAI,GAAGE,KAErB,GADAC,QAAQC,IAAIH,EAAQC,MAChBD,EAAQI,OAAQ,CAClB,GAAIJ,EAAQC,KAAM,CAChB,IAAIJ,EAAWG,EAAQC,KAAKI,KAAI,SAACC,EAAUC,GACzC,MAAO,CACLC,IAAKD,EACLE,SAAUH,EAASG,SACnBC,QAASJ,EAASI,QAClBC,YAAaL,EAASK,YACtBC,SAAUN,EAASM,aAIvBrB,EAASC,SAAS,CAAEK,WAAUgB,SAAUhB,IAE1CN,EAASC,SAAS,CAAEC,iBAAiB,SAErCF,EAASC,SAAS,CAAEsB,SAAUd,QAInCe,OAAM,SAAUhB,GACfG,QAAQC,IAAIJ,GACRA,EAAIiB,SAASd,QAAQC,IAAI,4CA1CjC,EAAKc,MAAQ,CACXpB,SAAU,GACVgB,SAAU,GACVpB,iBAAiB,GALD,E,qDASpB,WACEyB,KAAK5B,gB,oBAsCP,WACE,MAAsC4B,KAAKD,MAAnCpB,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,gBAElB,OACE,yBAAK0B,UAAU,yBACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,sCACb,wBAAIA,UAAU,kCACZ,kBAAC,IAAD,CAAWC,QAAQ,YAKvB,kBAAC,IAAD,CAAKD,UAAW,WACZ1B,EAkCA,uBAAG0B,UAAU,0CAjCb,kBAAC,IAAD,CAAKE,IAAE,EAACC,IAAE,EAACC,GAAI,GAAIJ,UAAU,SAC3B,kBAAC,IAAD,CAAMA,UAAU,yBACd,kBAAC,IAAD,KACE,kBAAC,iBAAD,CACElB,KAAMJ,EACN2B,YAAU,EACVC,SAAO,EACPC,WAAS,EACTC,QAAM,GAGN,kBAAC,oBAAD,CAAmBC,MAAM,MAAMC,UAAU,WAAWC,OAAK,GACtD,IACD,kBAAC,IAAD,CAAWV,QAAQ,SAAU,KAE/B,kBAAC,oBAAD,CAAmBQ,MAAM,MAAMC,UAAU,WACtC,IACD,kBAAC,IAAD,CAAWT,QAAQ,aAAc,KAEnC,kBAAC,oBAAD,CAAmBQ,MAAM,MAAMC,UAAU,eACtC,IACD,kBAAC,IAAD,CAAWT,QAAQ,YAAa,KAGlC,kBAAC,oBAAD,CAAmBQ,MAAM,MAAMC,UAAU,YACtC,IACD,kBAAC,IAAD,CAAWT,QAAQ,eAAgB,gB,GA1FvCW,IAAMC,WAyGX5C","file":"static/js/22.a9e28ab1.chunk.js","sourcesContent":["import React from 'react'\nimport './users.scss'\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'\nimport { Row, Col, Card, CardBody } from 'reactstrap'\nimport adminService from '../../services/adminService'\nimport axios from 'axios'\n\nimport Translate from 'react-translate-component'\n\nclass Users extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      userList: [],\n      userMain: [],\n      fetchingDetails: false\n    }\n  }\n\n  componentDidMount () {\n    this.getUserList()\n  }\n\n  getUserList = () => {\n    var thisView = this\n    thisView.setState({ fetchingDetails: true })\n    axios\n      .all([adminService.userList()])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          console.log(resData.data)\n          if (resData.status) {\n            if (resData.data) {\n              let userList = resData.data.map((eachUser, index) => {\n                return {\n                  sNo: index,\n                  fullName: eachUser.fullName,\n                  voterId: eachUser.voterId,\n                  userAddress: eachUser.userAddress,\n                  mobileNo: eachUser.mobileNo\n                  // status : eachUser.status\n                }\n              })\n              thisView.setState({ userList, userMain: userList })\n            }\n            thisView.setState({ fetchingDetails: false })\n          } else {\n            thisView.setState({ apiError: resData })\n          }\n        }\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  render () {\n    const { userList, fetchingDetails } = this.state\n\n    return (\n      <div className='col-span-12 mla-users'>\n        <div className='intro-y col-span-12'>\n          <div className='intro-y flex items-end mt-10 mb-10'>\n            <h2 className='text-lg text-black font-medium'>\n              <Translate content='users' />\n            </h2>\n            {/* <NavLink to={match.path + \"/add\"} className=\"ml-auto flex text-theme-1 \"> <Translate content=\"add\" /> </NavLink> */}\n          </div>\n          {/* main body */}\n          <Row className={'intro-y'}>\n            {!fetchingDetails ? (\n              <Col sm md lg={12} className='mb-30'>\n                <Card className='card-statistics h-100'>\n                  <CardBody>\n                    <BootstrapTable\n                      data={userList}\n                      pagination\n                      striped\n                      condensed\n                      search\n                    >\n                      {/* <TableHeaderColumn width='100' dataField='sNo' isKey>S.No</TableHeaderColumn>   */}\n                      <TableHeaderColumn width='100' dataField='fullName' isKey>\n                        {' '}\n                        <Translate content='name' />{' '}\n                      </TableHeaderColumn>\n                      <TableHeaderColumn width='100' dataField='voterId'>\n                        {' '}\n                        <Translate content='voter id' />{' '}\n                      </TableHeaderColumn>\n                      <TableHeaderColumn width='100' dataField='userAddress'>\n                        {' '}\n                        <Translate content='address' />{' '}\n                      </TableHeaderColumn>\n                      {/* <TableHeaderColumn width='100' dataField='status'> Status</TableHeaderColumn> */}\n                      <TableHeaderColumn width='100' dataField='mobileNo'>\n                        {' '}\n                        <Translate content='contact no' />{' '}\n                      </TableHeaderColumn>\n                    </BootstrapTable>\n                  </CardBody>\n                </Card>\n              </Col>\n            ) : (\n              <i className='fa fa-spin fa-refresh initial_loading' />\n            )}\n          </Row>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Users\n"],"sourceRoot":""}