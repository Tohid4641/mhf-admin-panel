{"version":3,"sources":["components/containers/albums/albums.js"],"names":["Albums","props","getAlbums","refresh","thisView","setState","fetchingDetails","axios","all","adminService","then","res","resData","data","albumsList","map","eachAlbum","index","albumFiles","replace","id","_id","details","albumTitle","JSON","parse","albumDate","createdAt","albumsMain","catch","console","log","message","formatAlbum","cell","row","to","match","path","className","onClick","e","updateAlbum","style","cursor","toggle","sm","images","length","eachImage","src","config","s3BasicPath","alt","deleteAlbum","authenticating","msg","state","albumtid","status","apiSuccess","setTimeout","modal","apiError","preventDefault","history","push","filterAlbums","event","searchText","target","value","filter","eachEvent","toLowerCase","indexOf","this","content","isOpen","marginTop","marginLeft","backgroundColor","color","md","lg","xs","field_search_input","placeholder","onChange","onKeyDown","ref","input","searchInput","pagination","striped","condensed","dataField","dataFormat","isKey","React","Component","connect","eventStatusFilter","auth","dispatch","updatingEventStatusFilter","updateEventStatusFilter"],"mappings":"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","file":"static/js/7.c63bf432.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport axios from 'axios'\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table'\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Alert\n} from 'reactstrap'\nimport adminService from '../../services/adminService'\nimport { connect } from 'react-redux'\nimport { updateEventStatusFilter } from '../../../store/actions/auth'\nimport Translate from 'react-translate-component'\n\nimport './albums.scss'\n\nclass Albums extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      albumsList: [],\n      albumsMain: [],\n      searchText: '',\n      fetchingDetails: false,\n      msg: true,\n      apiSuccess: '',\n      albumtid: '',\n      modal: false\n    }\n  }\n\n  componentDidMount () {\n    this.getAlbums()\n  }\n\n  getAlbums = (refresh = false) => {\n    var thisView = this\n    if (!refresh) thisView.setState({ fetchingDetails: true })\n    axios\n      .all([adminService.getAlbums()])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          let albums = resData.data ? resData.data : []\n          let albumsList = albums.map((eachAlbum, index) => {\n            // let albumFiles = eachAlbum.albumFiles ? eachAlbum.albumFiles.replace(/\\&quot;/g, '\"') : \"\";\n            let albumFiles = eachAlbum.albumFiles\n              ? eachAlbum.albumFiles.replace(/quot;/g, '\"')\n              : ''\n            return {\n              id: eachAlbum._id,\n              details: {\n                index: index,\n                id: eachAlbum._id,\n                albumTitle: eachAlbum.albumTitle,\n                albumFiles: JSON.parse(albumFiles),\n                albumDate: eachAlbum.createdAt\n              }\n            }\n          })\n          thisView.setState({ albumsList, albumsMain: albumsList })\n        }\n\n        thisView.setState({ fetchingDetails: false })\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  formatAlbum = (cell, row) => {\n    return (\n      <NavLink to={this.props.match.path + '/' + cell.id} className='mlac-each'>\n        <div className='mlace-head'>\n          <span>{cell.albumTitle}</span>\n          <span className='mlac-status'>\n            <i\n              className='fa fa-edit mlac-edit'\n              onClick={e => {\n                this.updateAlbum(e, cell)\n              }}\n            />\n            <span>\n              <i\n                className='fa fa-trash mlac-delete'\n                style={{ cursor: 'pointer' }}\n                onClick={e => {\n                  this.toggle(e, cell.id)\n                }}\n              />\n            </span>\n          </span>\n        </div>\n        <div className='mlace-content' sm={12}>\n          {cell.albumFiles &&\n            cell.albumFiles.images &&\n            cell.albumFiles.images.length > 0 &&\n            cell.albumFiles.images.map((eachImage, index) => {\n              return (\n                <div>\n                  <img\n                    src={this.props.config.s3BasicPath + eachImage}\n                    alt='porfile'\n                  />\n                </div>\n              )\n            })}\n        </div>\n      </NavLink>\n    )\n  }\n\n  deleteAlbum = () => {\n    var thisView = this\n    thisView.setState({ authenticating: true, msg: !this.state.msg })\n\n    this.setState({ authenticating: true })\n    axios\n      .all([adminService.deleteAlbum(this.state.albumtid)])\n      .then(function (res) {\n        if (res[0]) {\n          let resData = res[0].data\n          if (resData.status) {\n            thisView.setState({ apiSuccess: 'Album deleted successfully ' })\n\n            // if (insertType === \"\")\n            //     thisView.props.history.push(\"/contacts\");\n            // else if (insertType === \"headOfService\")\n            //     thisView.props.history.push(\"/serviceheads\");\n\n            // setTimeout(() => window.location.reload(), thisView.props.history.push(\"/contacts\"), window.location.reload(), 4000);\n            setTimeout(\n              () => thisView.setState({ modal: !thisView.state.modal }),\n              1000\n            )\n            // setTimeout(() => thisView.getAlbums(), 2000);\n            thisView.getAlbums(true)\n          } else {\n            thisView.setState({ apiError: resData.msg })\n          }\n        }\n        thisView.setState({ authenticating: false })\n        // setTimeout(() => window.location.reload(), thisView.setState({ modal: false }), 4000);\n      })\n      .catch(function (res) {\n        console.log(res)\n        if (res.message) console.log('An error occurred in change Password')\n      })\n  }\n\n  toggle = (e, cell) => {\n    e.preventDefault()\n    if (cell) {\n      this.setState({ albumtid: cell })\n    }\n    this.setState({\n      modal: !this.state.modal\n    })\n    console.log(cell)\n  }\n\n  updateAlbum = (e, cell) => {\n    e.preventDefault()\n    this.props.history.push(this.props.match.path + '/update/' + cell.id)\n  }\n\n  filterAlbums = event => {\n    let searchText = this.state.searchText\n    if (event) searchText = event.target.value\n\n    let albumsList = []\n    if (searchText && searchText.length >= 2) {\n      albumsList = this.state.albumsMain.filter(eachEvent => {\n        if (\n          eachEvent.details.albumTitle\n            .toLowerCase()\n            .indexOf(searchText.toLowerCase()) > -1\n        )\n          return true\n        else return false\n      })\n    } else {\n      albumsList = this.state.albumsMain\n    }\n\n    this.setState({ searchText, albumsList })\n  }\n\n  render () {\n    const { match } = this.props\n    const { albumsList, fetchingDetails } = this.state\n\n    return (\n      <div className='col-span-12 mlac-album'>\n        <div className='col-span-12 xxl:col-span-9'>\n          <div className='intro-y flex items-end mt-10'>\n            {/* <h2 className='text-lg text-black font-medium'></h2> */}\n            <NavLink\n              to={match.path + '/add'}\n              className='ml-auto flex text-theme-1'\n            >\n              <Translate content='add' />\n            </NavLink>\n          </div>\n        </div>\n\n        <Modal\n          isOpen={this.state.modal}\n          style={{ marginTop: '0px', marginLeft: '0px' }}\n        >\n          <ModalHeader\n            style={{ backgroundColor: '#253c80', color: 'white' }}\n            toggle={this.toggle}\n          >\n            Confimation{' '}\n          </ModalHeader>\n          <ModalBody>\n            {this.state.msg && (\n              <p>Are you sure you want to delete this Album</p>\n            )}\n            {this.state.apiSuccess && (\n              <div className='errormsg'>\n                <Alert color='success'>{this.state.apiSuccess}</Alert>\n              </div>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            {!this.state.authenticating ? (\n              <Button\n                className=' btn btn-primary '\n                color='danger'\n                onClick={this.deleteAlbum}\n              >\n                <span className='text-white'>Delete</span>\n              </Button>\n            ) : (\n              <i className='fa fa-spin fa-refresh authentication-loading' />\n            )}\n          </ModalFooter>\n        </Modal>\n\n        <Row className='intro-y mt-3 mb-3'>\n          <Col md={8}>\n            <h2 className='font-weight-bold'>\n              <Translate content='albums' />{' '}\n            </h2>\n          </Col>\n          <Col md={4}></Col>\n        </Row>\n\n        <Row className={'intro-y'}>\n          {!fetchingDetails ? (\n            <Col sm md lg={12} className='mb-30'>\n              <Card className='card-statistics h-100'>\n                <Row className='mlac-search-container'>\n                  <Col xs={12} sm={12} md={6} lg={8}></Col>\n                  <Col xs={12} sm={12} md={6} lg={4}>\n                    <input\n                      className='form-control mlac-search'\n                      value={this.state.field_search_input}\n                      placeholder={'Search'}\n                      onChange={this.filterAlbums}\n                      onKeyDown={this.filterAlbums}\n                      ref={input => {\n                        this.searchInput = input\n                      }}\n                    />\n                  </Col>\n                </Row>\n\n                <CardBody>\n                  <BootstrapTable\n                    data={albumsList}\n                    pagination\n                    striped\n                    condensed\n                    // search\n                  >\n                    <TableHeaderColumn\n                      className='mlac-row'\n                      dataField='details'\n                      dataFormat={this.formatAlbum}\n                      isKey\n                    ></TableHeaderColumn>\n                  </BootstrapTable>\n                </CardBody>\n              </Card>\n            </Col>\n          ) : (\n            <i className='fa fa-spin fa-refresh initial_loading' />\n          )}\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  eventStatusFilter: state.auth.eventStatusFilter,\n  config: state.auth.config\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updatingEventStatusFilter (data) {\n    dispatch(updateEventStatusFilter(data))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Albums)\n"],"sourceRoot":""}